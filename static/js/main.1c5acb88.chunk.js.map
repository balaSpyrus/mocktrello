{"version":3,"sources":["constants.tsx","styled/common.ts","components/addEntity.tsx","components/modals/editCardModal.tsx","components/card/card.tsx","components/card/cardList.tsx","components/navBar.tsx","App.tsx","serviceWorker.js","styled/globalStyles.ts","styled/theme.ts","index.tsx"],"names":["CONFIRM_ICON_CODE","_jsx","_Fragment","children","CLOSE_ICON_CODE","StyledSelect","styled","select","_templateObject","_taggedTemplateLiteral","_ref","_ref$$caratColor","$caratColor","concat","StyledButton","button","_templateObject2","_ref2","$color","theme","pallete","WHITE","_ref3","$bgcolor","undefined","AddEntity","onSaveFromProps","onSave","infoText","useTheme","_useState","useState","_useState2","_slicedToArray","isAdding","setIsAdding","_useState3","_useState4","title","setTitle","toggleBtn","prev","_jsxs","className","type","placeholder","autoFocus","value","onChange","e","target","onKeyDown","key","SUCCESS","onClick","ERROR","StyledModalSelect","EditCardModal","cardFromProps","card","onClose","cloneDeep","setCard","titleIsOpen","setTitleIsOpen","_useState5","_useState6","comment","setComment","_useState7","_useState8","descriptionIsOpen","setDescriptionIsOpen","name","_objectSpread","_defineProperty","Modal","isOpen","onRequestClose","overlayClassName","appElement","document","getElementById","description","priority","comments","map","i","index","splice","push","Card","deleteCard","expandCard","getTitleColor","classNames","join","Draggable","draggableId","id","dragHandleProps","draggableProps","innerRef","isDragging","ref","length","List","listFromProps","list","updateDashBoard","onDelete","setList","expandedCard","setExpandedCard","useEffect","addCard","cards","_toConsumableArray","Date","getTime","closeModal","arguments","mutatedList","eachCard","moveCard","dragIndex","hoverIndex","dragCard","filter","dragRef","Droppable","droppableId","_ref4","droppableProps","isDraggingOver","onMouseDown","preventDefault","listId","StyledNavSelect","StyledAddBtn","StyledNav","nav","_templateObject3","BLUE","BLACK","StylesNavTitle","div","_templateObject4","_ref5","_ref6","_ref7","NavAction","_templateObject5","_ref8","NavBar","_ref9","titleInfo","onEnter","dashboardList","onDashboardChange","selectedBoard","showAddInput","setShowAddInput","Title","useMemo","version","onClickAdd","dashboard","App","setDashboard","setSelectedBoard","getMockData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","next","fetch","process","then","json","sent","Object","keys","stop","apply","addList","mutatedDashboard","currBoard","deleteList","eachList","lists","onCardDrag","useCallback","result","destination","source","_destList","_destination$index","destList","listToMutate","find","Number","cardToMutate","each","_destList2","onDragEnd","DragDropContext","direction","_dashboard$selectedBo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalStyles","createGlobalStyle","GREY","freeze","LIGHT_GREEN","ORANGE","INACTIVE","WARNING","ReactDOM","render","ThemeProvider","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1c5acb88.chunk.js","sourcesContent":["export const CONFIRM_ICON_CODE = <>&#x2714;</>;\nexport const CLOSE_ICON_CODE = <>&#x2716;</>;\n","import styled from \"styled-components\";\n\nexport const StyledSelect = styled.select<{ $caratColor?: string }>`\n  outline: none;\n  min-height: 24px;\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 700;\n  background: ${({ $caratColor = \"black\" }) =>\n    `url(\"data:image/svg+xml,<svg height='10px' width='10px' viewBox='0 0 16 16' fill='${$caratColor}' xmlns='http://www.w3.org/2000/svg'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>\") no-repeat`};\n  background-position: calc(100% - 0.75rem) center !important;\n  -moz-appearance: none !important;\n  -webkit-appearance: none !important;\n  appearance: none !important;\n  padding-right: 2rem !important;\n  text-transform: capitalize;\n\n  & > option {\n    font-weight: 700;\n  }\n`;\n\nexport const StyledButton = styled.button<{\n  $bgcolor?: string;\n  $color?: string;\n}>`\n  border-radius: 16px;\n  padding: 4px 6px;\n  border: none;\n  color: ${({ $color, theme }) => $color || theme.pallete.WHITE};\n  font-size: 12px;\n  cursor: pointer;\n  text-align: center;\n  background: ${({ $bgcolor }) => $bgcolor || undefined};\n`;\n","import React, { useState } from \"react\";\r\nimport { CONFIRM_ICON_CODE, CLOSE_ICON_CODE } from \"../constants\";\r\nimport { StyledButton } from \"../styled/common\";\r\nimport { useTheme } from \"styled-components\";\r\n\r\ninterface Props {\r\n  onSave?: (title: string) => void;\r\n  infoText: string;\r\n}\r\n\r\nconst AddEntity: React.FC<Props> = ({ onSave: onSaveFromProps, infoText }) => {\r\n  const theme = useTheme();\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const toggleBtn = () => {\r\n    setIsAdding((prev) => !prev);\r\n  };\r\n\r\n  const onTitleChange: React.ChangeEventHandler<HTMLInputElement> = (e) =>\r\n    setTitle(e.target.value);\r\n\r\n  const onSave = () => {\r\n    onSaveFromProps?.(title);\r\n    setTitle(\"\");\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\r\n    if (e.key === \"Enter\" && title) {\r\n      onSave();\r\n    }\r\n  };\r\n\r\n  return isAdding ? (\r\n    <div className=\"add-one-mini\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder={infoText}\r\n        autoFocus\r\n        value={title}\r\n        onChange={onTitleChange}\r\n        onKeyDown={onEnterPress}\r\n      />\r\n      <div>\r\n        <StyledButton\r\n          $bgcolor={theme.pallete.SUCCESS}\r\n          onClick={title ? onSave : undefined}\r\n        >\r\n          {CONFIRM_ICON_CODE}\r\n        </StyledButton>\r\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={toggleBtn}>\r\n          {CLOSE_ICON_CODE}\r\n        </StyledButton>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <span className=\"add-one-element\" onClick={toggleBtn}>\r\n      {infoText}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default AddEntity;\r\n","import { cloneDeep } from \"lodash\";\r\nimport React, { ChangeEvent, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { StyledButton, StyledSelect } from \"../../styled/common\";\r\nimport { CardType } from \"../../types\";\r\nimport \"./editCardModal.css\";\r\nimport { CLOSE_ICON_CODE, CONFIRM_ICON_CODE } from \"../../constants\";\r\n\r\ninterface Props {\r\n  card: CardType;\r\n  onClose: (cardToSave?: CardType) => void;\r\n}\r\n\r\nconst StyledModalSelect = styled(StyledSelect)`\r\n  width: 100%;\r\n  color: #474747;\r\n`;\r\n\r\nconst EditCardModal: React.FC<Props> = ({ card: cardFromProps, onClose }) => {\r\n  const theme = useTheme();\r\n  const [card, setCard] = useState(cloneDeep(cardFromProps));\r\n  const [titleIsOpen, setTitleIsOpen] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [descriptionIsOpen, setDescriptionIsOpen] = useState(false);\r\n\r\n  const deleteComment = (index: number) =>\r\n    setCard((prev) => ({\r\n      ...prev,\r\n      comments: prev.comments.splice(index, 1),\r\n    }));\r\n\r\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setComment(e.target.value);\r\n\r\n  const addComment: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\r\n    if (e.key === \"Enter\" && comment) {\r\n      setCard((prev) => ({\r\n        ...prev,\r\n        comment: prev.comments.push(comment),\r\n      }));\r\n      setComment(\"\");\r\n    }\r\n  };\r\n\r\n  const onSave = () => onClose?.(card);\r\n\r\n  const onChange: React.ChangeEventHandler<\r\n    HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\r\n  > = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    setCard((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={true}\r\n      onRequestClose={() => onClose()}\r\n      className=\"Modal\"\r\n      overlayClassName=\"Overlay\"\r\n      appElement={document.getElementById(\"root\") as HTMLDivElement}\r\n    >\r\n      <div className=\"edit-modal-title\">\r\n        {titleIsOpen ? (\r\n          <input\r\n            type=\"text\"\r\n            className=\"on-edit-modal-title\"\r\n            name=\"title\"\r\n            onChange={onChange}\r\n            value={card.title}\r\n          />\r\n        ) : (\r\n          <h2>{card.title}</h2>\r\n        )}\r\n        <span\r\n          className={titleIsOpen ? \"close\" : \"edit\"}\r\n          onClick={() => setTitleIsOpen((prev) => !prev)}\r\n        ></span>\r\n      </div>\r\n      <div>\r\n        <label className=\"model-label\">description</label>\r\n        <div className=\"card-desc\">\r\n          {descriptionIsOpen ? (\r\n            <textarea\r\n              value={card.description}\r\n              onChange={onChange}\r\n              name=\"description\"\r\n              className=\"edit-text-area\"\r\n            />\r\n          ) : (\r\n            <i>{card.description}</i>\r\n          )}\r\n          <span\r\n            className={descriptionIsOpen ? \"close\" : \"edit\"}\r\n            onClick={() => setDescriptionIsOpen((prev) => !prev)}\r\n          ></span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label className=\"model-label\">status</label>\r\n        <StyledModalSelect\r\n          value={card.priority}\r\n          name=\"priority\"\r\n          onChange={onChange}\r\n        >\r\n          <option value={0}>new</option>\r\n          <option value={1}>investigate</option>\r\n          <option value={2}>in-progress</option>\r\n          <option value={3}>done</option>\r\n          <option value={4}>critical</option>\r\n          <option value={5}>hold</option>\r\n        </StyledModalSelect>\r\n      </div>\r\n      <div>\r\n        <label className=\"model-label\">comments</label>\r\n        <div className=\"card-comment-container\">\r\n          <div>\r\n            {card.comments.map((comment, i) => (\r\n              <span className=\"comment\" key={i}>\r\n                <i>{comment}</i>\r\n                <span\r\n                  className=\"comment-delete\"\r\n                  onClick={() => deleteComment(i)}\r\n                >\r\n                  {CLOSE_ICON_CODE}\r\n                </span>\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={comment}\r\n            className=\"add-comment\"\r\n            placeholder=\"type and press enter to add comment\"\r\n            onChange={onInputChange}\r\n            onKeyDown={addComment}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={onSave}>\r\n          {CONFIRM_ICON_CODE}\r\n        </StyledButton>\r\n        <StyledButton\r\n          $bgcolor={theme.pallete.ERROR}\r\n          onClick={() => onClose?.()}\r\n        >\r\n          {CLOSE_ICON_CODE}\r\n        </StyledButton>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditCardModal;\r\n","import React from \"react\";\r\nimport { CardType } from \"../../types\";\r\nimport \"./card.css\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { CLOSE_ICON_CODE } from \"../../constants\";\r\n\r\ninterface Props {\r\n  index: number;\r\n  listId: number;\r\n  card: CardType;\r\n  expandCard: () => void;\r\n  deleteCard: (id: number) => void;\r\n  moveCard: any;\r\n}\r\n\r\nconst Card: React.FC<Props> = ({ card, deleteCard, expandCard, index }) => {\r\n  const getTitleColor = (priority: number) => {\r\n    let classNames = [\"card-title\"];\r\n\r\n    switch (priority + \"\") {\r\n      case \"1\":\r\n        classNames.push(\"investigate\");\r\n        break;\r\n      case \"2\":\r\n        classNames.push(\"in-progress\");\r\n        break;\r\n      case \"3\":\r\n        classNames.push(\"done\");\r\n        break;\r\n      case \"4\":\r\n        classNames.push(\"critical\");\r\n        break;\r\n      case \"5\":\r\n        classNames.push(\"hold\");\r\n        break;\r\n      default:\r\n        classNames.push(\"new\");\r\n        break;\r\n    }\r\n\r\n    return classNames.join(\" \");\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={card.id + \"\"} key={card.id + \"\"} index={index}>\r\n      {({ dragHandleProps, draggableProps, innerRef }, { isDragging }) => (\r\n        <div\r\n          ref={innerRef}\r\n          className={isDragging ? \"card card-drag\" : \"card\"}\r\n          onClick={expandCard}\r\n          {...dragHandleProps}\r\n          {...draggableProps}\r\n        >\r\n          <div className={getTitleColor(card.priority)}>\r\n            <span> {card.title} </span>\r\n            <span onClick={() => deleteCard(card.id)}>{CLOSE_ICON_CODE}</span>\r\n          </div>\r\n          <div className=\"card-comment-count\" title={card.description}>\r\n            {card.comments.length ? (\r\n              <i>{`${card.comments.length} comment(s)`}</i>\r\n            ) : (\r\n              <i>Be the first to comment</i>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { cloneDeep } from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { CardType, DashBoardDataType } from \"../../types\";\r\nimport EditCardModal from \"../modals/editCardModal\";\r\nimport AddEntity from \"../addEntity\";\r\nimport Card from \"./card\";\r\nimport \"./cardList.css\";\r\nimport { CLOSE_ICON_CODE } from \"../../constants\";\r\nimport { StyledButton } from \"../../styled/common\";\r\nimport { useTheme } from \"styled-components\";\r\n\r\ninterface Props {\r\n  index: number;\r\n  list: DashBoardDataType[0][0];\r\n  updateDashBoard: (data: DashBoardDataType[0][0]) => void;\r\n  onDelete: (id: number) => void;\r\n}\r\n\r\nconst List: React.FC<Props> = ({\r\n  list: listFromProps,\r\n  updateDashBoard,\r\n  onDelete,\r\n  index,\r\n}) => {\r\n  const theme = useTheme();\r\n  const [list, setList] = useState(listFromProps);\r\n  const [expandedCard, setExpandedCard] = useState<CardType | null>(null);\r\n\r\n  useEffect(() => {\r\n    listFromProps && setList(listFromProps);\r\n  }, [listFromProps]);\r\n\r\n  const addCard = (title: string) => {\r\n    setList((prev) => ({\r\n      ...prev,\r\n      cards: [\r\n        ...prev.cards,\r\n        {\r\n          id: new Date().getTime(),\r\n          title,\r\n          priority: 0,\r\n          description: \"\",\r\n          comments: [],\r\n        },\r\n      ],\r\n    }));\r\n\r\n    updateDashBoard(list);\r\n  };\r\n\r\n  const closeModal = (card: CardType | null = null) => {\r\n    let mutatedList = cloneDeep(list);\r\n\r\n    if (card) {\r\n      mutatedList.cards = mutatedList.cards.map((eachCard) => {\r\n        if (eachCard.id === card.id) return card;\r\n        return eachCard;\r\n      });\r\n    }\r\n\r\n    setExpandedCard(null);\r\n    updateDashBoard(mutatedList);\r\n  };\r\n\r\n  const moveCard = (dragIndex: number, hoverIndex: number) => {\r\n    let mutatedList = cloneDeep(list);\r\n    const dragCard = mutatedList.cards[dragIndex];\r\n    mutatedList.cards.splice(dragIndex, 1);\r\n    mutatedList.cards.splice(hoverIndex, 0, dragCard);\r\n    updateDashBoard(mutatedList);\r\n  };\r\n\r\n  const deleteCard = (id: number) => {\r\n    let mutatedList = cloneDeep(list);\r\n    mutatedList.cards = mutatedList.cards.filter(\r\n      (eachCard) => eachCard.id !== id\r\n    );\r\n    updateDashBoard(mutatedList);\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={list.id + \"\"} key={list.id + \"\"} index={index}>\r\n      {({ dragHandleProps, draggableProps, innerRef: dragRef }) => (\r\n        <Droppable droppableId={list.id + \"\"} key={list.id + \"\"} type=\"card\">\r\n          {({ innerRef, droppableProps, placeholder }, { isDraggingOver }) => (\r\n            <div\r\n              className={isDraggingOver ? \"list card-cont-drop\" : \"list\"}\r\n              {...draggableProps}\r\n              ref={dragRef}\r\n            >\r\n              <div className=\"title-container\" {...dragHandleProps}>\r\n                <span>{list.title}</span>\r\n                <StyledButton\r\n                  $bgcolor={theme.pallete.ERROR}\r\n                  onClick={() => onDelete(list.id)}\r\n                >\r\n                  {CLOSE_ICON_CODE}\r\n                </StyledButton>\r\n              </div>\r\n              <div\r\n                ref={innerRef}\r\n                {...droppableProps}\r\n                className={\"card-container\"}\r\n              >\r\n                {!list.cards.length && (\r\n                  <div\r\n                    className=\"no-card\"\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                  >\r\n                    <i>No Card(s) available</i>\r\n                  </div>\r\n                )}\r\n                {list.cards.map((eachCard, i) => (\r\n                  <Card\r\n                    index={i}\r\n                    listId={list.id}\r\n                    deleteCard={deleteCard}\r\n                    expandCard={() => setExpandedCard(eachCard)}\r\n                    moveCard={moveCard}\r\n                    card={eachCard}\r\n                    key={i}\r\n                  />\r\n                ))}\r\n                {placeholder}\r\n              </div>\r\n              <div className=\"btn-container\">\r\n                <AddEntity infoText=\"add a card...\" onSave={addCard} />\r\n              </div>\r\n              {expandedCard && (\r\n                <EditCardModal card={expandedCard} onClose={closeModal} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { ChangeEvent, useMemo, useState } from \"react\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { StyledButton, StyledSelect } from \"../styled/common\";\r\nimport { TitleType } from \"../types\";\r\nimport { CLOSE_ICON_CODE } from \"../constants\";\r\n\r\ninterface Props {\r\n  titleInfo?: TitleType;\r\n  onEnter?: any;\r\n  dashboardList: string[];\r\n  onDashboardChange: React.ChangeEventHandler<HTMLSelectElement>;\r\n  selectedBoard?: string;\r\n}\r\n\r\nconst StyledNavSelect = styled(StyledSelect)`\r\n  color: ${({ theme }) => theme.pallete.WHITE};\r\n  border-color: ${({ theme }) => theme.pallete.WHITE};\r\n`;\r\n\r\nconst StyledAddBtn = styled(StyledButton)`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  padding: 4px 8px;\r\n\r\n  &:before {\r\n    content: \"+\";\r\n    padding-right: 8px;\r\n    font-size: 18px;\r\n    line-height: 16px;\r\n  }\r\n`;\r\n\r\nconst StyledNav = styled.nav`\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${({ theme }) => theme.pallete.BLUE};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: calc(100% - 32px);\r\n  max-height: 32px;\r\n  min-height: 32px;\r\n  padding: 8px 16px;\r\n  box-shadow: ${({ theme }) => `0px 4px 6px 0px ${theme.pallete.BLACK}4d`};\r\n  z-index: 100;\r\n`;\r\n\r\nconst StylesNavTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n\r\n  & > span {\r\n    font-weight: 900;\r\n    &:first-child {\r\n      color: ${({ theme }) => theme.pallete.WHITE};\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      font-size: 12px;\r\n      padding: 2px 4px;\r\n      border-radius: 16px;\r\n      background: ${({ theme }) => theme.pallete.WHITE};\r\n      color: ${({ theme }) => theme.pallete.BLUE};\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavAction = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n\r\n  & > div {\r\n    position: relative;\r\n\r\n    & > input {\r\n      height: 32px;\r\n      border-radius: 4px;\r\n      color: ${({ theme }) => theme.pallete.BLUE};\r\n      padding: 2px 36px 2px 8px;\r\n      font-weight: 700;\r\n      font-size: 16px;\r\n\r\n      &::placeholder {\r\n        font-size: 12px;\r\n        font-weight: initial;\r\n      }\r\n    }\r\n\r\n    & > button {\r\n      position: absolute;\r\n      right: 0%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavBar: React.FC<Props> = ({\r\n  titleInfo,\r\n  onEnter,\r\n  dashboardList,\r\n  onDashboardChange,\r\n  selectedBoard,\r\n}) => {\r\n  const theme = useTheme();\r\n  const [showAddInput, setShowAddInput] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const Title = useMemo(() => {\r\n    let title = \"Trello\",\r\n      version = \"2.0\";\r\n    if (titleInfo) {\r\n      title = titleInfo.title;\r\n      version = titleInfo.version;\r\n    }\r\n    return (\r\n      <StylesNavTitle>\r\n        <span>{title}</span>\r\n        {version && <span>{version}</span>}\r\n      </StylesNavTitle>\r\n    );\r\n  }, [titleInfo]);\r\n\r\n  const onClickAdd = () => {\r\n    setShowAddInput((prev) => !prev);\r\n    setTitle(\"\");\r\n  };\r\n\r\n  const onTitleChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setTitle(e.target.value);\r\n\r\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\r\n    if (e.key === \"Enter\" && title) {\r\n      onEnter?.(title);\r\n      onClickAdd();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledNav>\r\n      {Title}\r\n      <NavAction>\r\n        {showAddInput ? (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"type and press to add dashboard\"\r\n              value={title}\r\n              onChange={onTitleChange}\r\n              onKeyDown={onEnterPress}\r\n            />\r\n            <StyledButton $bgcolor={theme.pallete.ERROR} onClick={onClickAdd}>\r\n              {CLOSE_ICON_CODE}\r\n            </StyledButton>\r\n          </div>\r\n        ) : (\r\n          <StyledAddBtn\r\n            $bgcolor={theme.pallete.WHITE}\r\n            $color={theme.pallete.BLUE}\r\n            onClick={onClickAdd}\r\n          >\r\n            Add New Dashboard\r\n          </StyledAddBtn>\r\n        )}\r\n        {dashboardList.length ? (\r\n          <StyledNavSelect\r\n            onChange={onDashboardChange}\r\n            value={selectedBoard}\r\n            $caratColor=\"white\"\r\n          >\r\n            {dashboardList.map((dashboard, i) => (\r\n              <option key={i} value={dashboard}>\r\n                {dashboard + \" dashboard\"}\r\n              </option>\r\n            ))}\r\n          </StyledNavSelect>\r\n        ) : null}\r\n      </NavAction>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { cloneDeep } from \"lodash\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  DragDropContext,\n  DropResult,\n  Droppable,\n  OnDragEndResponder,\n} from \"react-beautiful-dnd\";\nimport \"./App.css\";\nimport { AddEntity, List, NavBar } from \"./components\";\nimport { CardType, DashBoardDataType, TitleType } from \"./types\";\nimport { CLOSE_ICON_CODE } from \"./constants\";\nimport { StyledButton } from \"./styled/common\";\nimport { useTheme } from \"styled-components\";\n\nconst App: React.FC = () => {\n  const theme = useTheme();\n  const [titleInfo] = useState<TitleType>({\n    title: \"Trello\",\n    version: \"2.0\",\n  });\n  const [dashboard, setDashboard] = useState<DashBoardDataType>({});\n  const [selectedBoard, setSelectedBoard] = useState(\"\");\n\n  const getMockData = async () => {\n    const data = await fetch(process.env.PUBLIC_URL + \"/mock-data.json\").then(\n      (data) => data.json()\n    );\n    setDashboard(data);\n    setSelectedBoard(Object.keys(data)[0]);\n  };\n\n  const addList = (title: string) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    let currBoard = selectedBoard ?? \"default\";\n\n    if (!mutatedDashboard[currBoard]) {\n      currBoard = \"default\";\n      mutatedDashboard[currBoard] = [];\n    }\n\n    mutatedDashboard[currBoard].push({\n      id: new Date().getTime(),\n      title,\n      cards: [],\n    });\n\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(currBoard);\n  };\n\n  const deleteList = (id: number) =>\n    setDashboard((prev) => ({\n      ...prev,\n      [selectedBoard]: prev[selectedBoard].filter(\n        (eachList) => eachList.id !== id\n      ),\n    }));\n\n  const onDashboardChange: React.ChangeEventHandler<HTMLSelectElement> = (e) =>\n    setSelectedBoard(e.target.value);\n\n  const updateDashBoard = (list: DashBoardDataType[0][0]) => {\n    let mutatedDashboard = cloneDeep(dashboard);\n    let lists = mutatedDashboard[selectedBoard].map((eachList) => {\n      if (eachList.id === list.id) return list;\n      return eachList;\n    });\n    mutatedDashboard[selectedBoard] = lists;\n    setDashboard(mutatedDashboard);\n  };\n\n  const onDashBoardTitleSave = (title: string) => {\n    let mutatedDashboard = cloneDeep(dashboard);\n    mutatedDashboard[title] = [];\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(title);\n  };\n\n  const deleteBoard = () => {\n    let mutatedDashboard = cloneDeep(dashboard);\n    delete mutatedDashboard[selectedBoard];\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(Object.keys(mutatedDashboard)[0]);\n  };\n\n  const onCardDrag = useCallback(\n    (result: DropResult) => {\n      const { destination, source, draggableId } = result;\n\n      setDashboard((prev) => {\n        let destList: DashBoardDataType[0][0] | undefined = undefined;\n        const listToMutate = prev[selectedBoard].find(\n          ({ id }) => id === Number(source.droppableId)\n        );\n        const cardToMutate = listToMutate?.cards.find(\n          ({ id }) => id === Number(draggableId)\n        );\n\n        listToMutate?.cards.splice(source.index, 1);\n\n        if (destination?.droppableId === source.droppableId) {\n          listToMutate?.cards.splice(\n            destination.index,\n            0,\n            cardToMutate as CardType\n          );\n        } else {\n          destList = prev[selectedBoard].find(\n            ({ id }) => id === Number(destination?.droppableId)\n          );\n\n          destList?.cards.splice(\n            destination?.index ?? 0,\n            0,\n            cardToMutate as CardType\n          );\n        }\n        return {\n          ...prev,\n          [selectedBoard]: prev[selectedBoard].map((each) =>\n            each.id === listToMutate?.id\n              ? listToMutate\n              : destList?.id === each.id\n              ? destList\n              : each\n          ),\n        };\n      });\n    },\n    [selectedBoard]\n  );\n\n  const onDragEnd: OnDragEndResponder = useCallback(\n    (result) => {\n      const { destination, source, type } = result;\n      if (!destination) {\n        return;\n      }\n\n      if (\n        destination.droppableId === source.droppableId &&\n        destination.index === source.index\n      ) {\n        return;\n      }\n\n      if (type === \"card\") {\n        onCardDrag(result);\n      }\n    },\n    [onCardDrag]\n  );\n\n  useEffect(() => {\n    getMockData();\n  }, []);\n\n  if (Object.keys(dashboard).length === 0 && !selectedBoard) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"App\">\n      <NavBar\n        titleInfo={titleInfo}\n        dashboardList={Object.keys(dashboard)}\n        onDashboardChange={onDashboardChange}\n        selectedBoard={selectedBoard}\n        onEnter={onDashBoardTitleSave}\n      />\n      <div className=\"list-section\">\n        {Object.keys(dashboard).length > 1 && (\n          <div className=\"dashboard-delete\">\n            <h2>delete dashboard</h2>\n            <StyledButton $bgcolor={theme.pallete.ERROR} onClick={deleteBoard}>\n              {CLOSE_ICON_CODE}\n            </StyledButton>\n          </div>\n        )}\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"container\" direction=\"horizontal\" type=\"list\">\n            {({ droppableProps, placeholder, innerRef }) => (\n              <div\n                className=\"list-container\"\n                ref={innerRef}\n                {...droppableProps}\n              >\n                {dashboard[selectedBoard]?.map((eachList, i) => (\n                  <List\n                    index={i}\n                    key={i}\n                    list={eachList}\n                    updateDashBoard={updateDashBoard}\n                    onDelete={deleteList}\n                  />\n                ))}\n                {placeholder}\n                <AddEntity infoText=\"add a new list...\" onSave={addList} />\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\nhtml, #root, .App,body {\n  height: 100%;\n}\n\n.App{\n  overflow: hidden;\n}\n\n.Modal {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  background: ${({ theme }) => theme.pallete.WHITE};\n  overflow: auto;\n  border-radius: 4px;\n  outline: none;\n  padding: 20px;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\nmax-width: 400px;\nwidth: 80%;\n  box-shadow:  ${({ theme }) => `0px 0px 20px 0px ${theme.pallete.GREY}`};\n  display: flex;\n  flex-direction: column;\n  gap:16px\n}\n\ninput {\n  outline: none;\n  border: none;\n}\n\ninput[type=text]::placeholder {\n  font-style: italic;\n}\n\n.Overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ theme }) => theme.pallete.GREY + \"99\"}\n}\n`;\n\nexport default GlobalStyles;\n","const COLORS = Object.freeze({\n  BLUE: \"#3081b0\",\n  GREY: \"#3b3b3b\",\n  WHITE: \"#ffffff\",\n  BLACK: \"#000000\",\n  LIGHT_GREEN: \"#759d90\",\n  ORANGE: \"#a16a05\",\n  SUCCESS: \"#3a8b5e\",\n  ERROR: \"#9f3939\",\n  INACTIVE: \"grey\",\n  WARNING: \"#a39e04\",\n});\n\nconst theme = {\n  pallete: COLORS,\n};\n\nexport default theme;\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"./styled/globalStyles\";\nimport theme from \"./styled/theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n    <GlobalStyles />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}