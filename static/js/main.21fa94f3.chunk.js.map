{"version":3,"sources":["components/addOne.js","components/card.js","components/list.js","components/navBar.js","components/mock-data.js","components/editCardModal.js","App.js","serviceWorker.js","index.js"],"names":["AddOne","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleBtn","setState","prev","isAddingOne","onToggle","state","onTitleChange","e","title","target","value","onSave","onEnterPress","key","nextProps","react_default","a","createElement","className","type","placeholder","addingFor","onChange","onKeyPress","onClick","href","React","Component","cardTarget","hover","monitor","component","onHoverList","listID","dragIndex","getItem","index","hoverIndex","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveCard","Card","getTitleColor","priority","classNames","push","join","_this2","_this$props","card","isDragging","connectDragSource","connectDropTarget","deleteCard","id","description","expandCard","comments","length","concat","onMouseDown","preventDefault","defaultProps","flow","DragSource","beginDrag","endDrag","didDrop","handleDrop","connect","dragSource","connectDragPreview","dragPreview","DropTarget","dropTarget","hovered","isOver","item","List","addCard","list","objectSpread","cards","Date","getTime","updateDashBoard","expandedCard","closeModal","arguments","undefined","map","eachCard","dragCard","splice","filter","isAddingCard","onDelete","lib","autoHeight","autoHeightMin","autoHeightMax","renderThumbVertical","_ref","style","objectWithoutProperties","assign","backgroundColor","borderRadius","i","src_components_card","addOne","components_editCardModal","onClose","NavBar","getTitleAndVersion","version","titleInfo","onClickAdd","showAddInput","onEnter","dashboardList","onDashboardChange","dashboard","selected","selectedBoard","mockData","personal","Business","customStyles","content","left","right","marginRight","transform","EditCardModal","deleteComment","onInputChange","comment","addComment","onEditClose","name","defineProperty","JSON","parse","stringify","titleIsOpen","descriptionIsOpen","react_modal_lib_default","isOpen","onRequestClose","overlayClassName","appElement","document","getElementById","_ref2","App","addList","deleteList","eachList","cardID","currentHoverListID","lists","listToRemove","listToAdd","removedCard","indexOf","onDashBoardTitleSave","deleteBoard","keys","navBar","react_dnd_lib","backend","HTML5Backend","renderThumbHorizontal","src_components_list","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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S,SACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,WAGR,CACIH,GAAM,EACNrD,MAAS,QACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,WAGR,CACIH,GAAM,EACNrD,MAAS,QACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,IAEhB,CACIH,GAAM,EACNrD,MAAS,YACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,SACA,WACA,cAGR,CACIH,GAAM,EACNrD,MAAS,QACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,SACA,cAGR,CACIH,GAAM,EACNrD,MAAS,aACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,SACA,WACA,cAGR,CACIH,GAAM,EACNrD,MAAS,SACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,cAGR,CACIH,GAAM,EACNrD,MAAS,cACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,cAGR,CACIH,GAAM,EACNrD,MAAS,YACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,WACA,cAIR,CACIH,GAAM,EACNrD,MAAS,QACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,SACA,WACA,gBAKhB,CACIH,GAAM,GACNrD,MAAS,cACTiF,MAAS,CACL,CACI5B,GAAM,GACNrD,MAAS,cACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,WAGR,CACIH,GAAM,GACNrD,MAAS,aACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,SACA,WACA,cAGR,CACIH,GAAM,GACNrD,MAAS,SACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,cAGR,CACIH,GAAM,GACNrD,MAAS,cACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,cAGR,CACIH,GAAM,GACNrD,MAAS,YACT0C,SAAY,EACZY,YAAe,kCACfE,SAAY,CACR,SACA,WACA,gBAKhB,CACIH,GAAM,GACNrD,MAAS,cACTiF,MAAS,CACL,CACI5B,GAA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","file":"static/js/main.21fa94f3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass AddOne extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAddingOne: false,\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(this.props.isAddingOne !== nextProps.isAddingOne){\r\n            this.setState({\r\n                isAddingOne: nextProps.isAddingOne\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    toggleBtn = () => {\r\n        this.setState(prev => ({\r\n            isAddingOne: !prev.isAddingOne\r\n        }))\r\n        this.props.onToggle && this.props.onToggle(!this.state.isAddingOne)\r\n\r\n    }\r\n\r\n    onTitleChange = (e) => {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n    onSave = () => {\r\n\r\n        this.props.onSave(this.state.title)\r\n        this.props.onToggle && this.props.onToggle(false)\r\n        this.setState({\r\n            title: '',\r\n            isAddingOne: false\r\n        })\r\n\r\n    }\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter' && this.state.title) {\r\n            this.onSave()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            this.state.isAddingOne ?\r\n                <div className='add-one-mini'>\r\n                    <input type='text' placeholder={this.props.addingFor} value={this.state.title} onChange={this.onTitleChange} onKeyPress={this.onEnterPress} />\r\n                    <button className='btn-c blue' onClick={this.state.title ? this.onSave : null}>&#x2714;</button>\r\n                    <button className='btn-c red' onClick={this.toggleBtn}>&#x2716;</button>\r\n                </div>\r\n                :\r\n                <a href='/#' className='add-one-element' onClick={this.toggleBtn}>{this.props.addingFor}</a>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddOne;\r\n","import flow from 'lodash/flow';\r\nimport React from 'react';\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport { findDOMNode } from 'react-dom';\r\nimport './card.css';\r\n\r\n\r\nconst cardSource = {\r\n    beginDrag(props) {\r\n        return {\r\n            id: props.id,\r\n            listID: props.listID,\r\n            index: props.index\r\n        }\r\n    },\r\n    endDrag(props, monitor) {\r\n        if (!monitor.didDrop() || !props.card) {\r\n            return;\r\n        }\r\n        return props.handleDrop(props.card.id, props.listID);\r\n    }\r\n};\r\n\r\nconst cardTarget = {\r\n    hover(props, monitor, component) {\r\n        props.onHoverList(props.listID)\r\n        const dragIndex = monitor.getItem().index\r\n        const hoverIndex = props.index\r\n\r\n        if (dragIndex === hoverIndex) {\r\n            return;\r\n        }\r\n\r\n        const hoverBoundingRect = (findDOMNode(\r\n            component\r\n        )).getBoundingClientRect();\r\n\r\n        const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n        const clientOffset = monitor.getClientOffset();\r\n        const hoverClientY = (clientOffset).y - hoverBoundingRect.top;\r\n\r\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n            return;\r\n        }\r\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n            return;\r\n        }\r\n\r\n        props.moveCard(dragIndex, hoverIndex, props.listID);\r\n        monitor.getItem().index = hoverIndex;\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Card extends React.Component {\r\n \r\n    static defaultProps = {\r\n        card: null\r\n    }\r\n\r\n    getTitleColor=(priority)=>{\r\n        let classNames=['card-title']\r\n\r\n        switch(priority+''){\r\n            case '1' : classNames.push('investigate')\r\n            break;\r\n            case '2' : classNames.push('in-progress')\r\n            break;\r\n            case '3' : classNames.push('done')\r\n            break;\r\n            case '4' : classNames.push('critical')\r\n            break;\r\n            case '5' : classNames.push('hold')\r\n            break;\r\n            default:classNames.push('new')\r\n            break;\r\n        }\r\n        \r\n        return classNames.join(' ')\r\n    }\r\n    render() {\r\n\r\n        const {\r\n            card,\r\n            isDragging,\r\n            // hovered,\r\n            connectDragSource,\r\n            connectDropTarget\r\n        } = this.props;\r\n\r\n        return (\r\n            connectDragSource &&\r\n            connectDropTarget &&\r\n            connectDragSource(\r\n                connectDropTarget(\r\n                    card ? <div className={isDragging ? 'card card-drag' : 'card'}>\r\n                        <span className='card-delete' onClick={() => this.props.deleteCard(card.id)}>&#x2716;</span>\r\n                        <div title={card.description} onClick={this.props.expandCard}>\r\n                            <span className={this.getTitleColor(card.priority)}> {card.title}  </span>\r\n                            <div className='card-comment-count'>\r\n                                {\r\n                                    card.comments.length ?\r\n                                        <i>{`${card.comments.length} comment(s)`}</i> : <i>Be the first to comment</i>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div> : <div className='no-card' onMouseDown={e => e.preventDefault()}><i>No Card(s) available</i></div>\r\n                ))\r\n        );\r\n    }\r\n}\r\n\r\nexport default flow(\r\n    DragSource(\r\n        'card',\r\n        cardSource,\r\n        (connect, monitor) => ({\r\n            connectDragSource: connect.dragSource(),\r\n            connectDragPreview: connect.dragPreview(),\r\n            isDragging: monitor.isDragging()\r\n        })\r\n    ),\r\n    DropTarget('card', cardTarget, (connect, monitor) => ({\r\n        connectDropTarget: connect.dropTarget(),\r\n        hovered: monitor.isOver(),\r\n        item: monitor.getItem()\r\n    }))\r\n)(Card);\r\n","import React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Card from './card';\r\nimport AddOne from './addOne';\r\nimport './list.css'\r\nimport { EditCardModal } from '.';\r\n\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            list: props.list,\r\n            isAddingCard: false,\r\n            expandedCard: null\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        list: null\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.list && nextProps.list !== this.props.list) {\r\n            this.setState({\r\n                list: nextProps.list\r\n            })\r\n        }\r\n    }\r\n\r\n    addCard = (title) => {\r\n        let list = { ...this.state.list }\r\n\r\n        list.cards.push({\r\n            id: new Date().getTime(),\r\n            title,\r\n            priority:0,\r\n            description: '',\r\n            comments: []\r\n        })\r\n\r\n        this.props.updateDashBoard(list)\r\n\r\n    }\r\n\r\n    expandCard = (card) => {\r\n        this.setState({ expandedCard: card })\r\n    }\r\n\r\n    closeModal = (card = null) => {\r\n\r\n        let list = { ...this.state.list }\r\n\r\n        if (card) {\r\n            list.cards = list.cards.map(eachCard => {\r\n                if (eachCard.id === card.id)\r\n                    return card\r\n                return eachCard\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            expandedCard: null\r\n        })\r\n\r\n        this.props.updateDashBoard(list)\r\n    }\r\n\r\n    moveCard = (dragIndex, hoverIndex) => {\r\n\r\n        let list = { ...this.state.list }\r\n        const dragCard = list.cards[dragIndex]\r\n        list.cards.splice(dragIndex, 1);\r\n        list.cards.splice(hoverIndex, 0, dragCard);\r\n       \r\n        this.props.updateDashBoard(list)\r\n\r\n    }\r\n\r\n    deleteCard = (id) => {\r\n        let list = { ...this.state.list }\r\n        list.cards = list.cards.filter(eachCard => eachCard.id !== id)\r\n        this.props.updateDashBoard(list)\r\n    }\r\n\r\n    onToggle =()=>this.setState(prev=>({isAddingCard:!prev.isAddingCard}))\r\n\r\n    render() {\r\n        return (\r\n            <div className='list'>\r\n                <div className='tite-container'>\r\n                    <span className=' left-float'>{this.state.list.title}</span>\r\n                    <div className=' right-float'>\r\n                        <span className='btn-c red' onClick={() => this.props.onDelete(this.state.list.id)}>&#x2716;</span>\r\n                    </div>\r\n                </div>\r\n                <div className='card-container'>\r\n                    <Scrollbars\r\n                        className=\"scroll\"\r\n                        autoHeight\r\n                        autoHeightMin={0}\r\n                        autoHeightMax={this.state.isAddingCard ? 'calc(100vh - 220px)' : 'calc(100vh - 165px)'}\r\n                        renderThumbVertical={\r\n                            ({ style, ...props }) =>\r\n                                <div {...props} style={{ ...style, backgroundColor: 'rgba(49, 49, 49, 0.4)', borderRadius: '3px' }} />\r\n                        } >\r\n                        {\r\n                            this.state.list.cards.length ? this.state.list.cards.map((eachCard, i) => <Card\r\n                                index={i} listID={this.state.list.id}\r\n                                deleteCard={this.deleteCard}\r\n                                expandCard={() => this.expandCard(eachCard)}\r\n                                onHoverList={this.props.onHoverList}\r\n                                moveCard={this.moveCard}\r\n                                handleDrop={this.props.handleDrop}\r\n                                card={eachCard}\r\n                                key={i} />)\r\n                                :\r\n                                <Card\r\n                                    moveCard={this.moveCard}\r\n                                    onHoverList={this.props.onHoverList}\r\n                                    handleDrop={this.props.handleDrop}\r\n                                />\r\n                        }\r\n                    </Scrollbars>\r\n                </div>\r\n                <div className='btn-container'>\r\n                        <AddOne\r\n                            addingFor='add a card...'\r\n                            onSave={this.addCard}\r\n                            onToggle={this.onToggle}\r\n                        />\r\n                </div>\r\n                {\r\n                    this.state.expandedCard &&\r\n                    <EditCardModal\r\n                        card={this.state.expandedCard}\r\n                        onClose={this.closeModal}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport './nav.css';\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showAddInput: false,\r\n            title: ''\r\n        }\r\n    }\r\n\r\n\r\n    getTitleAndVersion = () => {\r\n        let title = 'Trello', version = '2.0';\r\n        if (this.props.titleInfo) {\r\n            title = this.props.titleInfo.title;\r\n            version = this.props.titleInfo.version;\r\n        }\r\n        return (<div className='nav-title'>\r\n            <span>{title}</span>\r\n            {version && <span>{version}</span>}\r\n        </div>)\r\n    }\r\n\r\n    onClickAdd = () => {\r\n        this.setState(prev => ({ showAddInput: !prev.showAddInput ,title:''}))\r\n    }\r\n\r\n    onTitleChange = (e) => {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter' && this.state.title) {\r\n            this.props.onEnter && this.props.onEnter(this.state.title)\r\n            this.onClickAdd()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"navbar\">\r\n                {this.getTitleAndVersion()}\r\n                <div className='nav-right'>\r\n                    {\r\n                        this.state.showAddInput ?\r\n                            <div className='add-board'>\r\n                                <input type='text' placeholder='type and press to add dashboard' value={this.state.title} onChange={this.onTitleChange} onKeyPress={this.onEnterPress} />\r\n                                <button className='btn-c red' onClick={this.onClickAdd}>&#x2716;</button>\r\n                            </div>\r\n                            :\r\n                            <button className='btn-c add' onClick={this.onClickAdd}>\r\n                                <span>add  dashboard</span>\r\n                            </button>\r\n                    }\r\n                    {\r\n                        this.props.dashboardList.length ? <select onChange={this.props.onDashboardChange} className='select-list dashboard-list'>\r\n\r\n                            {\r\n                                this.props.dashboardList\r\n                                    .map((dashboard, i) => <option\r\n                                        key={i}\r\n                                        selected={dashboard === this.props.selectedBoard}\r\n                                        value={dashboard}>\r\n                                        {dashboard + ' dashboard'}</option>)\r\n                            }\r\n                        </select>:null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","export const mockData = {\r\n    \r\n    \"personal\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Tour List\",\r\n            \"cards\": [\r\n                {\r\n                    \"id\": 1,\r\n                    \"title\": \"London\",\r\n                    \"priority\": 0,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 2,\r\n                    \"title\": \"Hawai\",\r\n                    \"priority\": 0,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 3,\r\n                    \"title\": \"india\",\r\n                    \"priority\": 2,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": []\r\n                },\r\n                {\r\n                    \"id\": 4,\r\n                    \"title\": \"indonesia\",\r\n                    \"priority\": 5,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfds\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 5,\r\n                    \"title\": \"spain\",\r\n                    \"priority\": 4,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 6,\r\n                    \"title\": \"green land\",\r\n                    \"priority\": 3,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfds\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 7,\r\n                    \"title\": \"africa\",\r\n                    \"priority\": 1,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 8,\r\n                    \"title\": \"switzerland\",\r\n                    \"priority\": 6,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 9,\r\n                    \"title\": \"australia\",\r\n                    \"priority\": 5,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfds\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                }\r\n                ,\r\n                {\r\n                    \"id\": 9,\r\n                    \"title\": \"japan\",\r\n                    \"priority\": 3,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfds\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 12,\r\n            \"title\": \"Tour List 2\",\r\n            \"cards\": [\r\n                {\r\n                    \"id\": 11,\r\n                    \"title\": \"new zealand\",\r\n                    \"priority\": 0,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 16,\r\n                    \"title\": \"green land\",\r\n                    \"priority\": 3,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfds\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 17,\r\n                    \"title\": \"africa\",\r\n                    \"priority\": 1,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 18,\r\n                    \"title\": \"switzerland\",\r\n                    \"priority\": 6,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 19,\r\n                    \"title\": \"australia\",\r\n                    \"priority\": 5,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfds\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 22,\r\n            \"title\": \"Tour List 3\",\r\n            \"cards\": [\r\n                {\r\n                    \"id\": 21,\r\n                    \"title\": \"new zealand\",\r\n                    \"priority\": 0,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\"\r\n                    ]\r\n                },\r\n               \r\n                {\r\n                    \"id\": 27,\r\n                    \"title\": \"africa\",\r\n                    \"priority\": 3,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 28,\r\n                    \"title\": \"switzerland\",\r\n                    \"priority\": 5,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                }\r\n                ]\r\n        },\r\n        {\r\n            \"id\": 32,\r\n            \"title\": \"Tour List 4\",\r\n            \"cards\": [\r\n                {\r\n                    \"id\": 31,\r\n                    \"title\": \"new zealand\",\r\n                    \"priority\": 0,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 36,\r\n                    \"title\": \"green land\",\r\n                    \"priority\": 3,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfds\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 37,\r\n                    \"title\": \"africa\",\r\n                    \"priority\": 1,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 38,\r\n                    \"title\": \"switzerland\",\r\n                    \"priority\": 2,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 39,\r\n                    \"title\": \"australia\",\r\n                    \"priority\": 4,\r\n                    \"description\": \"i am a description for the card\",\r\n                    \"comments\": [\r\n                        \"dsfdsf\",\r\n                        \"dsfdsfds\",\r\n                        \"dsfdsfsdf\"\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n\"Business\":[]\r\n}","import React from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Modal from 'react-modal';\r\nimport './editCardModal.css';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nclass EditCardModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            card: JSON.parse(JSON.stringify(props.card)),\r\n            comment: '',\r\n            titleIsOpen: false,\r\n            descriptionIsOpen: false\r\n        }\r\n    }\r\n\r\n    deleteComment = (index) => {\r\n        let { card } = { ...this.state }\r\n        card.comments.splice(index, 1)\r\n        this.setState({ card })\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            comment: e.target.value\r\n        })\r\n    }\r\n\r\n    addComment = (e) => {\r\n\r\n        if (e.key === 'Enter' && this.state.comment) {\r\n            let { card } = { ...this.state }\r\n            card.comments.push(this.state.comment)\r\n            this.setState({\r\n                card,\r\n                comment: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    onEditClose = (name) => {\r\n        this.setState(prev => ({\r\n            [name + 'IsOpen']: !prev[name + 'IsOpen']\r\n        }))\r\n\r\n    }\r\n\r\n    onSave = () => {\r\n        this.props.onClose && this.props.onClose(this.state.card)\r\n    }\r\n\r\n    onChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        this.setState(prev => {\r\n            let card = { ...prev.card };\r\n            card[name] = value;\r\n            return { card }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { card } = { ...this.state }\r\n\r\n        return (\r\n\r\n            <Modal\r\n                isOpen={true}\r\n                onRequestClose={this.props.onClose}\r\n                style={customStyles}\r\n                className=\"Modal\"\r\n                overlayClassName=\"Overlay\"\r\n                appElement={document.getElementById('root')}\r\n            >\r\n                <div className='edit-modal-title'>\r\n                    {\r\n                        this.state.titleIsOpen ?\r\n                            <input type='text' className='on-edit-modal-title' name='title'\r\n                                onChange={this.onChange} value={card.title} />\r\n                            :\r\n                            <h2>{card.title}</h2>\r\n                    }\r\n                    <span className={this.state.titleIsOpen ? 'close' : 'edit'} onClick={() => this.onEditClose('title')}></span>\r\n                </div>\r\n                <label className='model-label'>description</label>\r\n                <div className='card-desc'>\r\n                    {\r\n                        this.state.descriptionIsOpen ?\r\n                            <textarea value={card.description} onChange={this.onChange}\r\n                                name='description' className='edit-text-area' />\r\n                            :\r\n                            <i>{card.description}</i>\r\n                    }\r\n                    <span className={this.state.descriptionIsOpen ? 'close' : 'edit'} onClick={() => this.onEditClose('description')}></span>\r\n                </div>\r\n                <label className='model-label'>status</label>\r\n                <select value={card.priority} name='priority' onChange={this.onChange} className='select-list status-list'>\r\n\r\n                    <option value={0}>new</option>\r\n                    <option value={1}>investigate</option>\r\n                    <option value={2}>in-progress</option>\r\n                    <option value={3}>done</option>\r\n                    <option value={4}>critical</option>\r\n                    <option value={5}>hold</option>\r\n                </select>\r\n                <label className='model-label'>comments</label>\r\n                <div className='card-comment-container'>\r\n                    <Scrollbars\r\n                        className=\"scroll\"\r\n                        autoHeight\r\n                        autoHeightMin={0}\r\n                        autoHeightMax={200}\r\n                        renderThumbVertical={\r\n                            ({ style, ...props }) =>\r\n                                <div {...props} style={{ ...style, backgroundColor: 'rgba(49, 49, 49, 0.4)', borderRadius: '3px' }} />\r\n                        } >\r\n                        {\r\n                            card.comments.map((comment, i) => <span className='comment' key={i}>\r\n                                <i>{comment}</i>\r\n                                <span className='comment-delete' onClick={() => this.deleteComment(i)}>&#x2716;</span>\r\n                            </span>)\r\n                        }\r\n                    </Scrollbars>\r\n                    <input type='text' value={this.state.comment} className='add-comment'\r\n                        placeholder='type and press enter to add comment'\r\n                        onChange={this.onInputChange} onKeyPress={this.addComment} />\r\n                </div>\r\n                <button className='btn-c blue' onClick={this.onSave}>&#x2714;</button>\r\n                <button className='btn-c red' onClick={this.props.onClose}>&#x2716;</button>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditCardModal;\r\n\r\n\r\n","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport './App.css';\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { mockData, NavBar, AddOne, List } from './components';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      titleInfo: {\n        title: 'Trello',\n        version: '2.0'\n      },\n      selectedBoard: '',\n      dashboard: mockData,\n      currentHoverListID: null\n    }\n  }\n\n  componentDidMount(){\n    if(mockData){\n      this.setState({\n        selectedBoard:Object.keys(mockData)[0]\n      })\n    }\n  }\n\n  addList = (title) => {\n\n\n    this.setState((prev) => {\n\n      let dashboard = { ...prev.dashboard }\n      let selectedBoard = prev.selectedBoard ? prev.selectedBoard : 'default'\n\n      if (!dashboard[selectedBoard]) {\n        selectedBoard = 'default'\n        dashboard[selectedBoard] = []\n      }\n\n      dashboard[selectedBoard].push({\n        id: new Date().getTime(),\n        title,\n        cards: []\n      })\n\n      return { dashboard, selectedBoard }\n    })\n  }\n\n  deleteList = (id) => {\n    this.setState(prev => {\n\n      let dashboard = { ...prev.dashboard }\n\n      dashboard[prev.selectedBoard] = dashboard[prev.selectedBoard]\n        .filter(eachList => eachList.id !== id)\n\n      return { dashboard }\n    })\n  }\n\n  handleDrop = (cardID, listID) => {\n\n    if (this.state.currentHoverListID && this.state.currentHoverListID !== listID) {\n\n      let dashboard = JSON.parse(JSON.stringify(this.state.dashboard))\n      let lists = dashboard[this.state.selectedBoard]\n\n      let listToRemove = lists.filter(list => list.id === listID)[0]\n      let listToAdd = lists.filter(list => list.id === this.state.currentHoverListID)[0]\n      let removedCard = listToRemove.cards.splice(listToRemove.cards.filter(card => card).map(card => card.id).indexOf(cardID), 1)[0]\n      listToAdd.cards.push(removedCard);\n      listToAdd.cards = listToAdd.cards.filter(card => card)\n      listToRemove.cards = listToRemove.cards.filter(card => card)\n      dashboard[this.state.selectedBoard] = lists\n      this.setState({ dashboard })\n\n    }\n\n  }\n\n  onHoverList = (id) => {\n    if (id && id !== this.state.currentHoverListID) {\n      this.setState({\n        currentHoverListID: id\n      })\n    }\n  }\n\n  onDashboardChange = (e) => {\n    this.setState({\n      selectedBoard: e.target.value\n    })\n  }\n\n  updateDashBoard = (list) => {\n\n    let dashboard = JSON.parse(JSON.stringify(this.state.dashboard))\n    let lists = dashboard[this.state.selectedBoard].map(eachList => {\n      if (eachList.id === list.id)\n        return list\n      return eachList\n    })\n    dashboard[this.state.selectedBoard] = lists\n\n    this.setState({ dashboard })\n\n  }\n\n  onDashBoardTitleSave = (title) => {\n    let dashboard = { ...this.state.dashboard }\n    dashboard[title] = []\n    this.setState({\n      dashboard,\n      selectedBoard: title\n    })\n  }\n\n  deleteBoard = () => {\n    let dashboard = { ...this.state.dashboard }\n    delete dashboard[this.state.selectedBoard]\n    this.setState({\n      dashboard,\n      selectedBoard: Object.keys(dashboard)[0]\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        < NavBar\n          titleInfo={this.state.titleInfo}\n          dashboardList={Object.keys(this.state.dashboard)}\n          onDashboardChange={this.onDashboardChange}\n          selectedBoard={this.state.selectedBoard}\n          onEnter={this.onDashBoardTitleSave}\n\n        />\n        <DndProvider backend={HTML5Backend}>\n          <div className='list-section' >\n            {Object.keys(this.state.dashboard).length > 1 &&\n              <div className='dashboard-delete'>\n                <h2>delete dashboard</h2>\n                <button className='btn-c red' onClick={this.deleteBoard}>&#x2716;</button>\n              </div>\n            }\n            <Scrollbars\n              className=\"scroll\"\n              renderThumbHorizontal={\n                ({ style, ...props }) =>\n                  <div {...props} style={{ ...style, backgroundColor: 'rgb(48, 129, 176)', borderRadius: '3px' }} />\n              }\n            >\n              <div className=\"list-container\">\n                {\n                  this.state.dashboard[this.state.selectedBoard] && this.state.dashboard[this.state.selectedBoard].map((eachList, i) => <List\n                    key={i}\n                    list={eachList}\n                    onHoverList={this.onHoverList}\n                    handleDrop={this.handleDrop}\n                    updateDashBoard={this.updateDashBoard}\n                    onDelete={this.deleteList} />)\n                }\n                <AddOne\n                  addingFor='add a new list...'\n                  onSave={this.addList}\n                />\n              </div>\n            </Scrollbars>\n          </div>\n        </DndProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}