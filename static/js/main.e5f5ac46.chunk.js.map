{"version":3,"sources":["styled/app.styles.ts","components/common/common.styles.ts","components/addEntity.tsx","components/card/card.styles.ts","components/modals/modal.styles.ts","components/modals/editCardModal.tsx","components/card/card.tsx","components/card/cardList.tsx","components/navbar/navbar.styles.ts","components/navbar/index.tsx","components/common/loader.tsx","firebaseDB.ts","App.tsx","serviceWorker.js","styled/globalStyles.ts","styled/theme.ts","index.tsx"],"names":["StyledListContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledDeleteDashboard","_templateObject2","_ref","theme","pallete","GREY","_ref2","_ref3","concat","BLACK","StyledListSection","_templateObject3","StyledAddOneContainer","_templateObject4","_ref4","VERY_LIGHT_GREY","StyledAddOneElement","_templateObject5","_ref5","StyledAddOneMini","_templateObject6","StyledSelect","select","$caratColor","StyledButton","button","$color","WHITE","$bgcolor","undefined","AddEntity","onSave","onSaveFromProps","infoText","useTheme","isAdding","setIsAdding","useState","title","setTitle","toggleBtn","prev","_jsxs","children","_jsx","type","placeholder","autoFocus","value","onChange","e","target","onKeyDown","key","SUCCESS","onClick","GiConfirmed","ERROR","AiFillCloseCircle","StyledChip","span","$bgColor","StyledCardTitle","StyledCard","_ref6","$isDragging","_ref7","StyledCardContent","_ref8","StyledAddContainer","_ref9","_ref10","$isDraggingOver","_ref11","_ref12","LIGHT_GREY","_ref13","StyledTitleContainer","_templateObject7","_ref14","_ref15","StyledCardContainer","_templateObject8","StyledModalSelect","StyledModal","Modal","StyledModalTitle","BLUE","StyledCommentContainer","LIGHT_GREEN","StyledCardDescription","_ref16","EditCardModal","card","cardFromProps","onClose","lastRef","useRef","setCard","cloneDeep","titleIsOpen","setTitleIsOpen","comment","setComment","descriptionIsOpen","setDescriptionIsOpen","name","useEffect","timeOut","setInterval","_lastRef$current","current","scrollIntoView","behavior","clearInterval","isOpen","onRequestClose","className","overlayClassName","appElement","document","getElementById","GrFormClose","fontSize","AiOutlineEdit","description","priority","comments","map","i","ref","length","deleteComment","index","splice","push","Card","id","deleteCard","editCard","color","text","useMemo","data","ORANGE","WARNING","Draggable","draggableId","dragHandleProps","draggableProps","innerRef","isDragging","MdDragIndicator","List","list","listFromProps","updateLists","onDelete","setList","expandedCard","setExpandedCard","addCard","mutableList","cards","Date","getTime","closeModal","arguments","mutatedList","eachCard","moveCard","dragIndex","hoverIndex","dragCard","filter","dragRef","Droppable","droppableId","droppableProps","isDraggingOver","MdDeleteOutline","size","onMouseDown","preventDefault","listId","StyledNavSelect","StyledAddBtn","StyledNav","nav","StylesNavTitle","NavAction","NavBar","titleInfo","onEnter","dashboards","onDashboardChange","selectedBoard","showAddInput","setShowAddInput","Title","version","onClickAdd","MdOutlineDashboardCustomize","spin","keyframes","Loader","AiOutlineLoading","attrs","props","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","COLLECTION_NAME","collectionRef","collection","createDashboard","async","addDoc","newData","getAllDashboards","useMock","getDocs","empty","mockData","fetch","process","then","json","Promise","all","insertMockData","docs","each","App","initialUpdateTime","setDashboards","setSelectedBoard","addList","updatedAt","now","lists","deleteList","eachList","onListDrag","useCallback","_destination$index","destination","source","result","changedList","removedList","onCardDrag","_listToMutate$cards$s","destList","listToMutate","find","cardToMutate","_destList","_destination$index2","_destList2","onDragEnd","userDoc","doc","updateDoc","updateDashboard","selected","newDashboard","alldashboards","_Fragment","mutatedDashboard","deleteDoc","deleteDashboard","BsFillClipboardXFill","DragDropContext","direction","style","height","width","display","alignItems","justifyContent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalStyles","createGlobalStyle","Object","freeze","INACTIVE","ReactDOM","render","ThemeProvider","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e5f5ac46.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledListContainer = styled.div`\n  margin-top: 56px;\n  height: calc(100% - 80px);\n  width: calc(100% - 32px);\n  padding: 16px;\n  display: flex;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const StyledDeleteDashboard = styled.div`\n  position: absolute;\n  bottom: 24px;\n  right: 32px;\n  z-index: 999;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  border-radius: 16px;\n\n  & > button {\n    box-shadow: 4px 6px 6px 0px ${({ theme }) => theme.pallete.GREY + '80'};\n    font-size: 22px;\n    padding: 12px;\n    border-radius: 24px;\n  }\n\n  & > h2 {\n    font-size: 14px;\n    text-transform: capitalize;\n    color: ${({ theme }) => theme.pallete.GREY};\n    background: ${({ theme }) => `${theme.pallete.BLACK}35`};\n    border-radius: 8px;\n    padding: 6px 12px;\n    transition: all 0.1s ease-in-out;\n    overflow: hidden;\n    opacity: 0;\n  }\n\n  &:hover > h2 {\n    opacity: 1;\n    transition: all 0.1s ease-in-out;\n  }\n`;\n\nexport const StyledListSection = styled.div`\n  display: flex;\n  gap: 16px;\n  overflow: auto;\n  align-items: flex-start;\n`;\n\nconst StyledAddOneContainer = styled.div`\n  background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  width: 214px;\n  min-width: 214px;\n  border-radius: 2px;\n  cursor: pointer;\n  padding: 12px;\n`;\n\nexport const StyledAddOneElement = styled(StyledAddOneContainer)`\n  color: ${({ theme }) => theme.pallete.GREY};\n  align-self: flex-start;\n  font-size: 14px;\n`;\n\nexport const StyledAddOneMini = styled(StyledAddOneContainer)`\n  display: flex;\n  align-self: flex-start;\n  flex-direction: column;\n  gap: 12px;\n\n  & > input {\n    height: 32px;\n    border-radius: 2px;\n    padding: 4px 8px;\n  }\n\n  & > div {\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    gap: 8px;\n    & > button {\n      text-align: center;\n      justify-content: center;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledSelect = styled.select<{ $caratColor?: string }>`\n  outline: none;\n  min-height: 24px;\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 700;\n  background: ${({ $caratColor = 'black' }) =>\n    `url(\"data:image/svg+xml,<svg height='10px' width='10px' viewBox='0 0 16 16' fill='${$caratColor}' xmlns='http://www.w3.org/2000/svg'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>\") no-repeat`};\n  background-position: calc(100% - 0.75rem) center !important;\n  -moz-appearance: none !important;\n  -webkit-appearance: none !important;\n  appearance: none !important;\n  padding-right: 2rem !important;\n  text-transform: capitalize;\n\n  & > option {\n    font-weight: 700;\n  }\n`;\n\nexport const StyledButton = styled.button<{\n  $bgcolor?: string;\n  $color?: string;\n}>`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  border-radius: 16px;\n  padding: 4px 6px;\n  border: none;\n  color: ${({ $color, theme }) => $color || theme.pallete.WHITE};\n  font-size: 12px;\n  cursor: pointer;\n  text-align: center;\n  background: ${({ $bgcolor }) => $bgcolor || undefined};\n`;\n","import React, { useState } from 'react';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport { GiConfirmed } from 'react-icons/gi';\nimport { useTheme } from 'styled-components';\nimport { StyledAddOneElement, StyledAddOneMini } from '../styled/app.styles';\nimport { StyledButton } from './common/common.styles';\n\ninterface Props {\n  onSave?: (title: string) => void;\n  infoText: string;\n}\n\nconst AddEntity: React.FC<Props> = ({ onSave: onSaveFromProps, infoText }) => {\n  const theme = useTheme();\n  const [isAdding, setIsAdding] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const toggleBtn = () => {\n    setIsAdding((prev) => !prev);\n  };\n\n  const onTitleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => setTitle(e.target.value);\n\n  const onSave = () => {\n    onSaveFromProps?.(title);\n    setTitle('');\n    setIsAdding(false);\n  };\n\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && title) {\n      onSave();\n    }\n  };\n\n  if (!isAdding) {\n    return <StyledAddOneElement onClick={toggleBtn}>{infoText}</StyledAddOneElement>;\n  }\n\n  return (\n    <StyledAddOneMini>\n      <input\n        type='text'\n        placeholder={infoText}\n        autoFocus\n        value={title}\n        onChange={onTitleChange}\n        onKeyDown={onEnterPress}\n      />\n      <div>\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={title ? onSave : undefined}>\n          <GiConfirmed />\n          Save\n        </StyledButton>\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={toggleBtn}>\n          <AiFillCloseCircle />\n          Cancel\n        </StyledButton>\n      </div>\n    </StyledAddOneMini>\n  );\n};\n\nexport default AddEntity;\n","import styled from 'styled-components';\n\nexport const StyledChip = styled.span<{ $bgColor: string }>`\n  background: ${({ $bgColor }) => $bgColor};\n  padding: 4px 6px;\n  border-radius: 25px;\n  color: white;\n  font-size: 12px;\n  font-weight: 700;\n`;\n\nexport const StyledCardTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  justify-content: space-between;\n  padding: 8px;\n  font-weight: 700;\n  color: white;\n  text-transform: capitalize;\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background: ${({ theme }) => theme.pallete.GREY};\n\n  & > div {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    flex: 1;\n  }\n\n  & > span {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    & path {\n      fill: ${({ theme }) => theme.pallete.WHITE};\n      stroke: ${({ theme }) => theme.pallete.WHITE};\n    }\n  }\n`;\n\nexport const StyledCard = styled.div<{ $isDragging: boolean }>`\n  position: relative;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${({ theme }) => theme.pallete.BLACK};\n  box-shadow: ${({ $isDragging, theme }) =>\n    $isDragging ? undefined : `2px 2px 0px 0px ${theme.pallete.BLACK}96`};\n  transition: 200ms all ease-in-out;\n  opacity: ${({ $isDragging }) => ($isDragging ? 0.7 : 1)};\n\n  &:hover {\n    opacity: 0.85;\n    transform: scale(0.95);\n  }\n`;\n\nexport const StyledCardContent = styled.div<{ $bgColor: string }>`\n  padding: 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  background: ${({ theme, $bgColor }) =>\n    `repeating-linear-gradient(-55deg, ${theme.pallete.WHITE}, ${theme.pallete.WHITE} 10px, ${$bgColor}20 10px, ${$bgColor}20 20px)`};\n\n  & span:first-child {\n    font-size: 12px;\n  }\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 8px;\n    & span {\n      font-size: 12px;\n    }\n  }\n`;\n\nexport const StyledAddContainer = styled.div`\n  padding: 12px;\n  border-top: 1px solid ${({ theme }) => theme.pallete.BLACK};\n\n  & > * {\n    padding: 8px !important;\n    width: 198px !important;\n    min-width: 198px !important;\n  }\n`;\n\nexport const StyledListContainer = styled.div<{ $isDraggingOver?: boolean }>`\n  min-width: 240px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  background: ${({ $isDraggingOver, theme }) =>\n    $isDraggingOver ? theme.pallete.VERY_LIGHT_GREY : theme.pallete.WHITE};\n  border: 1px solid ${({ theme }) => theme.pallete.BLACK};\n  box-shadow: 4px 4px\n    ${({ $isDraggingOver, theme }) =>\n      $isDraggingOver\n        ? `4px 2px ${theme.pallete.LIGHT_GREY}75`\n        : ` 0px 0px ${theme.pallete.LIGHT_GREY}75`};\n  color: ${({ theme }) => theme.pallete.GREY};\n  max-height: calc(100% - 12px);\n  transition: 200ms all ease-in-out;\n`;\n\nexport const StyledTitleContainer = styled.div`\n  padding: 12px;\n  font-weight: 900;\n  border-bottom: 1px solid ${({ theme }) => theme.pallete.BLACK};\n  background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  text-transform: capitalize;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  & > div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n  }\n\n  & > span {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 12px 12px 12px;\n  overflow: auto;\n  gap: 20px;\n\n  .no-card {\n    padding-top: 12px;\n    text-align: center;\n    font-size: 12px;\n  }\n`;\n","import styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { StyledSelect } from '../common/common.styles';\n\nexport const StyledModalSelect = styled(StyledSelect)`\n  width: 100%;\n  color: ${({ theme }) => theme.pallete.GREY};\n`;\n\nexport const StyledModal = styled(Modal)`\n  label {\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n`;\nexport const StyledModalTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-transform: capitalize;\n  background: ${({ theme }) => theme.pallete.BLUE};\n  padding: 12px;\n  border-radius: 4px;\n  color: white;\n  gap: 12px;\n  & input {\n    height: 30px;\n    width: 100%;\n    border-radius: 4px;\n    padding: 3px 10px;\n    font-size: 20px;\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n\n  & path {\n    fill: ${({ theme }) => theme.pallete.WHITE};\n    stroke: ${({ theme }) => theme.pallete.WHITE};\n  }\n\n  & h2 {\n    margin: 0;\n    display: inline-block;\n  }\n`;\nexport const StyledCommentContainer = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-weight: 700;\n  background: ${({ theme }) => theme.pallete.LIGHT_GREEN + '40'};\n  border-radius: 4px;\n\n  & input {\n    height: 24px;\n    border: none;\n    border-radius: 4px;\n    padding: 4px 8px;\n    background: ${({ theme }) => theme.pallete.LIGHT_GREY};\n    color: ${({ theme }) => theme.pallete.GREY};\n    font-size: 14px;\n\n    &::placeholder {\n      color: ${({ theme }) => theme.pallete.GREY};\n    }\n  }\n\n  & > div {\n    max-height: 250px;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    & > span {\n      position: relative;\n      display: block;\n      padding: 4px 8px;\n      background: ${({ theme }) => theme.pallete.SUCCESS + 'c4'};\n      color: white;\n      font-size: 12px;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      border-radius: 20px;\n      min-height: 14px;\n      & > span {\n        padding: 0px 4px;\n        cursor: pointer;\n        position: absolute;\n        right: 4px;\n        top: 3px;\n        color: white;\n        & path {\n          fill: ${({ theme }) => theme.pallete.WHITE};\n          stroke: ${({ theme }) => theme.pallete.WHITE};\n        }\n      }\n    }\n  }\n`;\nexport const StyledCardDescription = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  overflow: auto;\n  background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  padding: 12px;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.pallete.GREY};\n  gap: 12px;\n  & > textarea {\n    margin: 0px;\n    width: 475px;\n    height: 100px;\n    max-width: 475px;\n    max-height: 100px;\n    border-radius: 4px;\n    font-size: 14px;\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n`;\n","import { cloneDeep } from 'lodash';\nimport React, { ChangeEvent, useEffect, useRef, useState } from 'react';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { GrFormClose } from 'react-icons/gr';\nimport { useTheme } from 'styled-components';\nimport { StyledButton } from '../common/common.styles';\n\nimport { CardType } from '../../types';\nimport {\n  StyledModal,\n  StyledModalTitle,\n  StyledCardDescription,\n  StyledModalSelect,\n  StyledCommentContainer,\n} from './modal.styles';\n\ninterface Props {\n  card: CardType;\n  onClose: (cardToSave?: CardType) => void;\n}\n\nconst EditCardModal: React.FC<Props> = ({ card: cardFromProps, onClose }) => {\n  const theme = useTheme();\n  const lastRef = useRef<HTMLSpanElement>(null);\n  const [card, setCard] = useState(cloneDeep(cardFromProps));\n  const [titleIsOpen, setTitleIsOpen] = useState(false);\n  const [comment, setComment] = useState('');\n  const [descriptionIsOpen, setDescriptionIsOpen] = useState(false);\n\n  const deleteComment = (index: number) =>\n    setCard((prev) => ({\n      ...prev,\n      comments: prev.comments.splice(index, 1),\n    }));\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => setComment(e.target.value);\n\n  const addComment: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && comment) {\n      setCard((prev) => ({\n        ...prev,\n        comment: prev.comments.push(comment),\n      }));\n      setComment('');\n    }\n  };\n\n  const onSave = () => onClose?.(card);\n\n  const onChange: React.ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n  > = (e) => {\n    const { name } = e.target;\n    const { value } = e.target;\n\n    setCard((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    const timeOut = setInterval(() => lastRef.current?.scrollIntoView({ behavior: 'smooth' }), 100);\n\n    return () => {\n      clearInterval(timeOut);\n    };\n  }, [lastRef.current]);\n\n  return (\n    <StyledModal\n      isOpen\n      onRequestClose={() => onClose()}\n      className='Modal'\n      overlayClassName='Overlay'\n      appElement={document.getElementById('root') as HTMLDivElement}\n    >\n      <StyledModalTitle>\n        {titleIsOpen ? (\n          <input type='text' name='title' onChange={onChange} value={card.title} />\n        ) : (\n          <h2>{card.title}</h2>\n        )}\n        <span onClick={() => setTitleIsOpen((prev) => !prev)}>\n          {titleIsOpen ? <GrFormClose fontSize={18} /> : <AiOutlineEdit fontSize={16} />}\n        </span>\n      </StyledModalTitle>\n      <div>\n        <label>description</label>\n        <StyledCardDescription>\n          {descriptionIsOpen ? (\n            <textarea value={card.description} onChange={onChange} name='description' />\n          ) : (\n            <i>{card.description}</i>\n          )}\n          <span onClick={() => setDescriptionIsOpen((prev) => !prev)}>\n            {descriptionIsOpen ? <GrFormClose fontSize={18} /> : <AiOutlineEdit fontSize={16} />}\n          </span>\n        </StyledCardDescription>\n      </div>\n      <div>\n        <label>status</label>\n        <StyledModalSelect value={card.priority} name='priority' onChange={onChange}>\n          <option value={0}>new</option>\n          <option value={1}>investigate</option>\n          <option value={2}>in-progress</option>\n          <option value={3}>done</option>\n          <option value={4}>critical</option>\n          <option value={5}>hold</option>\n        </StyledModalSelect>\n      </div>\n      <div>\n        <label>comments</label>\n        <StyledCommentContainer>\n          <div>\n            {card.comments.map((comment, i) => (\n              <span key={i} ref={card.comments.length === i + 1 ? lastRef : null}>\n                <i>{comment}</i>\n                <span onClick={() => deleteComment(i)}>\n                  <GrFormClose fontSize={18} />\n                </span>\n              </span>\n            ))}\n          </div>\n\n          <input\n            type='text'\n            value={comment}\n            placeholder='type and press enter to add comment'\n            onChange={onInputChange}\n            onKeyDown={addComment}\n          />\n        </StyledCommentContainer>\n      </div>\n      <div>\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={onSave}>\n          Save\n        </StyledButton>\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={() => onClose?.()}>\n          Cancel\n        </StyledButton>\n      </div>\n    </StyledModal>\n  );\n};\n\nexport default EditCardModal;\n","import React, { useMemo } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { GrFormClose } from 'react-icons/gr';\nimport { MdDragIndicator } from 'react-icons/md';\nimport { useTheme } from 'styled-components';\nimport { StyledCard, StyledCardContent, StyledCardTitle, StyledChip } from './card.styles';\nimport { CardType } from '../../types';\n\ninterface Props {\n  index: number;\n  listId: string;\n  card: CardType;\n  editCard: () => void;\n  deleteCard: (id: string) => void;\n  moveCard: any;\n}\n\nconst Card: React.FC<Props> = ({\n  card: { comments, description, id, priority, title },\n  deleteCard,\n  editCard,\n  index,\n}) => {\n  const theme = useTheme();\n  const { color, text } = useMemo(() => {\n    let data = {\n      color: '',\n      text: '',\n    };\n    switch (`${priority}`) {\n      case '1':\n        data.color = theme.pallete.ORANGE;\n        data.text = 'Investigate';\n        break;\n      case '2':\n        data.color = theme.pallete.WARNING;\n        data.text = 'In-Progess';\n        break;\n      case '3':\n        data.color = theme.pallete.SUCCESS;\n        data.text = 'Completed';\n        break;\n      case '4':\n        data.color = theme.pallete.ERROR;\n        data.text = 'Blocked';\n        break;\n      case '5':\n        data.color = theme.pallete.LIGHT_GREY;\n        data.text = 'On-Hold';\n        break;\n      default:\n        data.color = theme.pallete.BLUE;\n        data.text = 'New';\n        break;\n    }\n\n    return data;\n  }, [priority]);\n\n  return (\n    <Draggable draggableId={`${id}`} key={`${id}`} index={index}>\n      {({ dragHandleProps, draggableProps, innerRef }, { isDragging }) => (\n        <StyledCard $isDragging={isDragging} ref={innerRef} {...draggableProps}>\n          <StyledCardTitle>\n            <div {...dragHandleProps}>\n              <MdDragIndicator />\n              <span> {title} </span>\n            </div>\n            <span onClick={editCard}>\n              <AiOutlineEdit fontSize={16} />\n            </span>\n            <span onClick={() => deleteCard(id)}>\n              <GrFormClose fontSize={16} />\n            </span>\n          </StyledCardTitle>\n          <StyledCardContent $bgColor={color}>\n            <span>{description}</span>\n            <div>\n              <StyledChip $bgColor={color}>{text}</StyledChip>\n              {comments.length ? (\n                <span>{`${comments.length} comment(s)`}</span>\n              ) : (\n                <span>No comment</span>\n              )}\n            </div>\n          </StyledCardContent>\n        </StyledCard>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import { cloneDeep } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { MdDeleteOutline, MdDragIndicator } from 'react-icons/md';\nimport { useTheme } from 'styled-components';\nimport {\n  StyledAddContainer,\n  StyledCardContainer,\n  StyledListContainer,\n  StyledTitleContainer,\n} from './card.styles';\nimport { CardType, ListDataType } from '../../types';\nimport AddEntity from '../addEntity';\nimport EditCardModal from '../modals/editCardModal';\nimport Card from './card';\n\ninterface Props {\n  index: number;\n  list: ListDataType;\n  updateLists: (data: ListDataType) => void;\n  onDelete: (id: string) => void;\n}\n\nconst List: React.FC<Props> = ({ list: listFromProps, updateLists, onDelete, index }) => {\n  const theme = useTheme();\n  const [list, setList] = useState(listFromProps);\n  const [expandedCard, setExpandedCard] = useState<CardType | null>(null);\n\n  useEffect(() => {\n    listFromProps && setList(listFromProps);\n  }, [listFromProps]);\n\n  const addCard = (title: string) => {\n    const mutableList = cloneDeep(list);\n    mutableList.cards.push({\n      id: new Date().getTime() + '',\n      title,\n      priority: 0,\n      description: '',\n      comments: [],\n    });\n    setList(mutableList);\n    updateLists(mutableList);\n  };\n\n  const closeModal = (card: CardType | null = null) => {\n    const mutatedList = cloneDeep(list);\n\n    if (card) {\n      mutatedList.cards = mutatedList.cards.map((eachCard) => {\n        if (eachCard.id === card.id) return card;\n        return eachCard;\n      });\n    }\n\n    setExpandedCard(null);\n    updateLists(mutatedList);\n  };\n\n  const moveCard = (dragIndex: number, hoverIndex: number) => {\n    const mutatedList = cloneDeep(list);\n    const dragCard = mutatedList.cards[dragIndex];\n    mutatedList.cards.splice(dragIndex, 1);\n    mutatedList.cards.splice(hoverIndex, 0, dragCard);\n    updateLists(mutatedList);\n  };\n\n  const deleteCard = (id: string) => {\n    const mutatedList = cloneDeep(list);\n    mutatedList.cards = mutatedList.cards.filter((eachCard) => eachCard.id !== id);\n    updateLists(mutatedList);\n  };\n\n  return (\n    <Draggable draggableId={`${list.id}`} key={`${list.id}`} index={index}>\n      {({ dragHandleProps, draggableProps, innerRef: dragRef }) => (\n        <Droppable droppableId={`${list.id}`} key={`${list.id}`} type='card'>\n          {({ innerRef, droppableProps, placeholder }, { isDraggingOver }) => (\n            <StyledListContainer {...draggableProps} $isDraggingOver={isDraggingOver} ref={dragRef}>\n              <StyledTitleContainer>\n                <div {...dragHandleProps}>\n                  <MdDragIndicator />\n                  <span>{list.title}</span>\n                </div>\n                <span onClick={() => onDelete(list.id)}>\n                  <MdDeleteOutline size={18} color={theme.pallete.ERROR} />\n                </span>\n              </StyledTitleContainer>\n              <StyledCardContainer ref={innerRef} {...droppableProps}>\n                {!list.cards.length && (\n                  <div className='no-card' onMouseDown={(e) => e.preventDefault()}>\n                    No Card(s) available\n                  </div>\n                )}\n                {list.cards.map((eachCard, i) => (\n                  <Card\n                    index={i}\n                    listId={list.id}\n                    deleteCard={deleteCard}\n                    editCard={() => setExpandedCard(eachCard)}\n                    moveCard={moveCard}\n                    card={eachCard}\n                    key={i}\n                  />\n                ))}\n                {placeholder}\n              </StyledCardContainer>\n              <StyledAddContainer>\n                <AddEntity infoText='Add a card...' onSave={addCard} />\n              </StyledAddContainer>\n              {expandedCard && <EditCardModal card={expandedCard} onClose={closeModal} />}\n            </StyledListContainer>\n          )}\n        </Droppable>\n      )}\n    </Draggable>\n  );\n};\n\nexport default List;\n","import styled from 'styled-components';\nimport { StyledButton, StyledSelect } from '../common/common.styles';\n\nexport const StyledNavSelect = styled(StyledSelect)`\n  color: ${({ theme }) => theme.pallete.WHITE};\n  border-color: ${({ theme }) => theme.pallete.WHITE};\n  border-radius: 20px;\n`;\n\nexport const StyledAddBtn = styled(StyledButton)`\n  font-size: 14px;\n  font-weight: 700;\n  padding: 10px 12px;\n  border-radius: 20px;\n`;\n\nexport const StyledNav = styled.nav`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.pallete.BLUE};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: calc(100% - 32px);\n  max-height: 32px;\n  min-height: 32px;\n  padding: 12px 16px;\n  box-shadow: ${({ theme }) => `0px 4px 6px 0px ${theme.pallete.BLACK}4d`};\n  z-index: 100;\n`;\n\nexport const StylesNavTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  & > span {\n    font-weight: 900;\n    &:first-child {\n      color: ${({ theme }) => theme.pallete.WHITE};\n    }\n\n    &:nth-child(2) {\n      font-size: 12px;\n      padding: 2px 4px;\n      border-radius: 16px;\n      background: ${({ theme }) => theme.pallete.WHITE};\n      color: ${({ theme }) => theme.pallete.BLUE};\n    }\n  }\n`;\n\nexport const NavAction = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  & > div {\n    position: relative;\n\n    & > input {\n      height: 32px;\n      border-radius: 50px;\n      color: ${({ theme }) => theme.pallete.BLUE};\n      padding: 2px 24px 2px 16px;\n      font-weight: 700;\n      font-size: 16px;\n\n      &::placeholder {\n        font-size: 12px;\n        font-weight: initial;\n      }\n    }\n\n    & > button {\n      position: absolute;\n      padding: 0;\n      right: 0%;\n      top: 50%;\n      transform: translate(-25%, -50%);\n      & path {\n        fill: ${({ theme }) => theme.pallete.ERROR};\n        stroke: ${({ theme }) => theme.pallete.ERROR};\n        stroke-width: 3;\n      }\n    }\n  }\n`;\n","import React, { ChangeEvent, useMemo, useState } from 'react';\nimport { MdOutlineDashboardCustomize } from 'react-icons/md';\nimport { useTheme } from 'styled-components';\n\nimport { GrFormClose } from 'react-icons/gr';\nimport { StyledButton } from '../common/common.styles';\nimport { TitleType, DashBoardDataType } from '../../types';\nimport {\n  StylesNavTitle,\n  StyledNav,\n  NavAction,\n  StyledAddBtn,\n  StyledNavSelect,\n} from './navbar.styles';\n\ninterface Props {\n  titleInfo?: TitleType;\n  onEnter?: any;\n  dashboards: DashBoardDataType[];\n  onDashboardChange: React.ChangeEventHandler<HTMLSelectElement>;\n  selectedBoard?: DashBoardDataType;\n}\n\nconst NavBar: React.FC<Props> = ({\n  titleInfo,\n  onEnter,\n  dashboards,\n  onDashboardChange,\n  selectedBoard,\n}) => {\n  const theme = useTheme();\n  const [showAddInput, setShowAddInput] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const Title = useMemo(() => {\n    let title = 'Trello';\n    let version = '2.0';\n    if (titleInfo) {\n      title = titleInfo.title;\n      version = titleInfo.version;\n    }\n    return (\n      <StylesNavTitle>\n        <span>{title}</span>\n        {version && <span>{version}</span>}\n      </StylesNavTitle>\n    );\n  }, [titleInfo]);\n\n  const onClickAdd = () => {\n    setShowAddInput((prev) => !prev);\n    setTitle('');\n  };\n\n  const onTitleChange = (e: ChangeEvent<HTMLInputElement>) => setTitle(e.target.value);\n\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && title) {\n      onEnter?.(title);\n      onClickAdd();\n    }\n  };\n\n  return (\n    <StyledNav>\n      {Title}\n      <NavAction>\n        {showAddInput ? (\n          <div>\n            <input\n              type='text'\n              placeholder='type and press to add dashboard'\n              value={title}\n              onChange={onTitleChange}\n              onKeyDown={onEnterPress}\n            />\n            <StyledButton $bgcolor={'transparent'} onClick={onClickAdd}>\n              <GrFormClose fontSize={18} />\n            </StyledButton>\n          </div>\n        ) : (\n          <StyledAddBtn\n            $bgcolor={theme.pallete.WHITE}\n            $color={theme.pallete.BLUE}\n            onClick={onClickAdd}\n          >\n            <MdOutlineDashboardCustomize />\n            Add New Dashboard\n          </StyledAddBtn>\n        )}\n        {dashboards.length ? (\n          <StyledNavSelect\n            onChange={onDashboardChange}\n            value={selectedBoard?.id}\n            $caratColor='white'\n          >\n            {dashboards.map(({ id, title }, i) => (\n              <option key={i} value={id}>\n                {`${title} dashboard`}\n              </option>\n            ))}\n          </StyledNavSelect>\n        ) : null}\n      </NavAction>\n    </StyledNav>\n  );\n};\n\nexport default NavBar;\n","import { AiOutlineLoading } from 'react-icons/ai';\nimport styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nexport const Loader = styled(AiOutlineLoading).attrs((props) => ({ size: props.size || 80 }))<{\n  color?: string;\n}>`\n  stroke-width: 12px;\n  animation: ${spin} 0.8s ease-in-out infinite;\n  color: ${({ theme, color }) => color || theme.pallete.BLUE};\n`;\n","// Import the functions you need from the SDKs you need\nimport {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  getDocs,\n  getFirestore,\n  updateDoc,\n} from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport { DashBoardDataType } from './types';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBQQ8PxMCDJQFvwFKRKwnOEGGkOcTyr4Y0',\n  authDomain: 'trello-db-ca4b5.firebaseapp.com',\n  projectId: 'trello-db-ca4b5',\n  storageBucket: 'trello-db-ca4b5.appspot.com',\n  messagingSenderId: '470835219425',\n  appId: '1:470835219425:web:ab9f2abc79a923d79420a0',\n  measurementId: 'G-GPQB01DV77',\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\nconst COLLECTION_NAME = 'trello_board';\nconst collectionRef = collection(db, COLLECTION_NAME);\n\nexport const updateDashboard = async (newData: DashBoardDataType) => {\n  const userDoc = doc(db, COLLECTION_NAME, newData.id);\n  await updateDoc(userDoc, newData as Record<string, any>);\n};\n\nexport const deleteDashboard = async (id: string) => {\n  const userDoc = doc(db, COLLECTION_NAME, id);\n  await deleteDoc(userDoc);\n};\n\nexport const createDashboard = async (newData: DashBoardDataType) =>\n  await addDoc(collectionRef, newData);\n\nexport const insertMockData = async (): Promise<DashBoardDataType[]> => {\n  const mockData: DashBoardDataType[] = await fetch(\n    `${process.env.PUBLIC_URL}/mock-data.json`,\n  ).then((data) => data.json());\n  Promise.all(mockData.map(async (data) => await createDashboard(data)));\n  return getAllDashboards();\n};\n\nexport const getAllDashboards = async (useMock = false) => {\n  const data = await getDocs(collectionRef);\n  if (data.empty && useMock) {\n    return insertMockData();\n  } else {\n    return data.docs.map((each) => ({ ...each.data(), id: each.id } as DashBoardDataType));\n  }\n};\n","import { cloneDeep } from 'lodash';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { DragDropContext, DropResult, Droppable, OnDragEndResponder } from 'react-beautiful-dnd';\nimport { BsFillClipboardXFill } from 'react-icons/bs';\nimport { useTheme } from 'styled-components';\nimport { AddEntity, List, NavBar } from './components';\nimport { Loader } from './components/common/loader';\nimport { createDashboard, deleteDashboard, getAllDashboards, updateDashboard } from './firebaseDB';\nimport { StyledDeleteDashboard, StyledListContainer, StyledListSection } from './styled/app.styles';\nimport { StyledButton } from './components/common/common.styles';\nimport { DashBoardDataType, ListDataType, TitleType } from './types';\n\nconst App: React.FC = () => {\n  const theme = useTheme();\n  const initialUpdateTime = useRef<number | undefined>();\n  const [titleInfo] = useState<TitleType>({\n    title: 'Trello',\n    version: '2.0',\n  });\n  const [dashboards, setDashboards] = useState<DashBoardDataType[]>();\n  const [selectedBoard, setSelectedBoard] = useState<DashBoardDataType>();\n\n  const addList = async (title: string) => {\n    if (!selectedBoard) return;\n\n    setSelectedBoard((prev) => ({\n      ...(prev as DashBoardDataType),\n      updatedAt: Date.now(),\n      lists: [\n        ...(prev?.lists as ListDataType[]),\n        {\n          id: new Date().getTime() + '',\n          title,\n          cards: [],\n        },\n      ],\n    }));\n  };\n\n  const deleteList = async (id: string) => {\n    if (!selectedBoard) return;\n\n    setSelectedBoard((prev) => ({\n      ...(prev as DashBoardDataType),\n      updatedAt: Date.now(),\n      lists: (prev?.lists as ListDataType[]).filter((eachList) => eachList.id !== id),\n    }));\n  };\n\n  const onDashboardChange: React.ChangeEventHandler<HTMLSelectElement> = (e) =>\n    setSelectedBoard(dashboards?.find((each) => each.id === e.target.value));\n\n  const updateLists = async (list: ListDataType) => {\n    if (!selectedBoard) return;\n\n    setSelectedBoard((prev) => ({\n      ...(prev as DashBoardDataType),\n      updatedAt: Date.now(),\n      lists: (prev?.lists as ListDataType[]).map((eachList) => {\n        if (eachList.id === list.id) return list;\n        return eachList;\n      }),\n    }));\n  };\n\n  const onDashBoardTitleSave = async (title: string) => {\n    if (!dashboards) return;\n    const newDashboard: DashBoardDataType = {\n      id: (dashboards?.length || 0) + '',\n      title,\n      lists: [],\n    };\n    setDashboards((prev) => [...(prev as DashBoardDataType[]), newDashboard]);\n    await createDashboard(newDashboard);\n    const alldashboards = await getAllDashboards();\n    setSelectedBoard(alldashboards.find((each) => each.title === title));\n    setDashboards(alldashboards);\n  };\n\n  const deleteBoard = async () => {\n    if (!selectedBoard || !dashboards) return;\n    const mutatedDashboard = dashboards.filter((each) => each.id !== selectedBoard.id);\n    setSelectedBoard(mutatedDashboard?.[0]);\n    await deleteDashboard(selectedBoard.id);\n    setDashboards(mutatedDashboard);\n  };\n\n  const onListDrag = useCallback(\n    async (result: DropResult) => {\n      if (!selectedBoard || !dashboards) return;\n      const { destination, source } = result;\n\n      const changedList = cloneDeep(selectedBoard?.lists) as ListDataType[];\n      const [removedList] = changedList.splice(source.index, 1);\n      changedList.splice(destination?.index ?? source.index, 0, removedList);\n\n      setSelectedBoard((prev) => ({\n        ...(prev as DashBoardDataType),\n        updatedAt: Date.now(),\n        lists: changedList,\n      }));\n    },\n    [selectedBoard],\n  );\n\n  const onCardDrag = useCallback(\n    async (result: DropResult) => {\n      if (!selectedBoard || !dashboards) return;\n      const { destination, source } = result;\n      let destList: ListDataType | undefined;\n      const listToMutate = cloneDeep(\n        selectedBoard.lists.find(({ id }) => id === source.droppableId),\n      ) as ListDataType;\n      const [cardToMutate] = listToMutate?.cards.splice(source.index, 1) ?? [];\n\n      if (destination?.droppableId === source.droppableId) {\n        listToMutate?.cards.splice(destination.index, 0, cardToMutate);\n      } else {\n        destList = cloneDeep(selectedBoard.lists.find(({ id }) => id === destination?.droppableId));\n        destList?.cards.splice(destination?.index ?? source.index, 0, cardToMutate);\n      }\n\n      setSelectedBoard((prev) => ({\n        ...(prev as DashBoardDataType),\n        updatedAt: Date.now(),\n        lists: (prev?.lists as ListDataType[]).map((eachList) =>\n          eachList.id === listToMutate.id\n            ? listToMutate\n            : destList?.id === eachList.id\n            ? destList\n            : eachList,\n        ),\n      }));\n    },\n    [selectedBoard],\n  );\n\n  const onDragEnd: OnDragEndResponder = useCallback(\n    (result) => {\n      const { destination, source, type } = result;\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      if (type === 'card') {\n        onCardDrag(result);\n      }\n\n      if (type === 'list') {\n        onListDrag(result);\n      }\n    },\n    [onCardDrag, onListDrag],\n  );\n\n  useEffect(() => {\n    getAllDashboards(true).then(setDashboards);\n  }, []);\n\n  useEffect(() => {\n    if (selectedBoard && selectedBoard?.updatedAt !== initialUpdateTime.current) {\n      updateDashboard(selectedBoard).then(() => getAllDashboards().then(setDashboards));\n    }\n  }, [selectedBoard?.updatedAt]);\n\n  useEffect(() => {\n    if (dashboards?.length && !selectedBoard) {\n      const selected = dashboards.find((each) => !!each.lists.length) || dashboards[0];\n      initialUpdateTime.current = selected.updatedAt;\n      setSelectedBoard(selected);\n    }\n  }, [dashboards, selectedBoard]);\n\n  if (!dashboards) {\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className='App'>\n      <NavBar\n        titleInfo={titleInfo}\n        dashboards={dashboards}\n        onDashboardChange={onDashboardChange}\n        selectedBoard={selectedBoard}\n        onEnter={onDashBoardTitleSave}\n      />\n      <StyledListContainer>\n        {dashboards?.length ? (\n          <>\n            <StyledDeleteDashboard>\n              <h2>Delete Dashboard</h2>\n              <StyledButton $bgcolor={theme.pallete.ERROR} onClick={deleteBoard}>\n                <BsFillClipboardXFill />\n              </StyledButton>\n            </StyledDeleteDashboard>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId='container' direction='horizontal' type='list'>\n                {({ droppableProps, placeholder, innerRef }) => (\n                  <StyledListSection ref={innerRef} {...droppableProps}>\n                    {selectedBoard?.lists.map((eachList, i) => (\n                      <List\n                        index={i}\n                        key={eachList.id}\n                        list={eachList}\n                        updateLists={updateLists}\n                        onDelete={deleteList}\n                      />\n                    ))}\n                    {placeholder}\n                    <AddEntity infoText='Add a new list...' onSave={addList} />\n                  </StyledListSection>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </>\n        ) : (\n          <></>\n        )}\n      </StyledListContainer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\nhtml, #root, .App,body {\n  height: 100%;\n}\n\n.App{\n  overflow: hidden;\n}\n\n.Modal {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  background: ${({ theme }) => theme.pallete.WHITE};\n  overflow: auto;\n  border-radius: 4px;\n  outline: none;\n  padding: 20px;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\nmax-width: 400px;\nwidth: 80%;\n  box-shadow:  ${({ theme }) => `0px 0px 20px 0px ${theme.pallete.GREY}`};\n  display: flex;\n  flex-direction: column;\n  gap:16px;\n\n& path {\n        stroke-width: 3;\n      }\n}\n\ninput {\n  outline: none;\n  border: none;\n}\n\ninput[type=text]::placeholder {\n  font-style: italic;\n}\n\n.Overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ theme }) => `${theme.pallete.GREY}99`};\n  z-index: 9999;\n}\n\n.Modal label{\n  margin-bottom: 5px;\n  display: block;\n  text-transform: capitalize;\n  font-weight: 500;\n}\n\n.Modal>div:last-child{\ndisplay: flex;\nalign-items: center;\njustify-content: stretch;\ngap: 8px;\n}\n\n.Modal button {\n  font-size: 18px;\n  border-radius: 20px;\n  padding: 8px 12px;\n  flex:1;\n  text-align:center;\n  display:block\n}\n\n`;\n\nexport default GlobalStyles;\n","const COLORS = Object.freeze({\n  BLUE: '#3081b0',\n  GREY: '#3b3b3b',\n  LIGHT_GREY: '#c6c6c6',\n  VERY_LIGHT_GREY: '#e8e8e8',\n  WHITE: '#ffffff',\n  BLACK: '#000000',\n  LIGHT_GREEN: '#759d90',\n  ORANGE: '#a16a05',\n  SUCCESS: '#3a8b5e',\n  ERROR: '#9f3939',\n  INACTIVE: 'grey',\n  WARNING: '#a39e04',\n});\n\nconst theme = {\n  pallete: COLORS,\n};\n\nexport default theme;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport GlobalStyles from './styled/globalStyles';\nimport theme from './styled/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n    <GlobalStyles />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}