{"version":3,"sources":["constants.tsx","styled/common.ts","components/addEntity.tsx","components/modals/editCardModal.tsx","components/card/card.tsx","components/card/cardList.tsx","components/navBar.tsx","App.tsx","serviceWorker.js","styled/globalStyles.ts","styled/theme.ts","index.tsx"],"names":["CONFIRM_ICON_CODE","_jsx","_Fragment","children","CLOSE_ICON_CODE","StyledSelect","styled","select","_templateObject","_taggedTemplateLiteral","_ref","_ref$$caratColor","$caratColor","concat","StyledButton","button","_templateObject2","_ref2","$color","theme","pallete","WHITE","_ref3","$bgcolor","undefined","StyledAddOneContainer","div","StyledAddOneElement","StyledAddOneMini","_templateObject3","AddEntity","onSaveFromProps","onSave","infoText","useTheme","_useState","useState","_useState2","_slicedToArray","isAdding","setIsAdding","_useState3","_useState4","title","setTitle","toggleBtn","prev","_jsxs","type","placeholder","autoFocus","value","onChange","e","target","onKeyDown","key","SUCCESS","onClick","ERROR","StyledModalSelect","EditCardModal","cardFromProps","card","onClose","cloneDeep","setCard","titleIsOpen","setTitleIsOpen","_useState5","_useState6","comment","setComment","_useState7","_useState8","descriptionIsOpen","setDescriptionIsOpen","name","_objectSpread","_defineProperty","Modal","isOpen","onRequestClose","className","overlayClassName","appElement","document","getElementById","description","priority","comments","map","i","index","splice","push","Card","deleteCard","expandCard","getTitleColor","classNames","join","Draggable","draggableId","id","dragHandleProps","draggableProps","innerRef","isDragging","ref","length","StyledAddContainer","StyledListContainer","$isDraggingOver","StyledTitleContainer","StyledCardContainer","_templateObject4","List","listFromProps","list","updateDashBoard","onDelete","setList","expandedCard","setExpandedCard","useEffect","addCard","cards","_toConsumableArray","Date","getTime","closeModal","arguments","mutatedList","eachCard","moveCard","dragIndex","hoverIndex","dragCard","filter","_ref4","dragRef","Droppable","droppableId","_ref5","_ref6","droppableProps","isDraggingOver","onMouseDown","preventDefault","listId","StyledNavSelect","StyledAddBtn","StyledNav","nav","BLUE","BLACK","StylesNavTitle","_ref7","NavAction","_templateObject5","_ref8","NavBar","_ref9","titleInfo","onEnter","dashboardList","onDashboardChange","selectedBoard","showAddInput","setShowAddInput","Title","useMemo","version","onClickAdd","dashboard","StyledDeleteDashboard","StyledListSection","App","setDashboard","setSelectedBoard","getMockData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","next","fetch","process","then","json","sent","Object","keys","stop","apply","addList","mutatedDashboard","currBoard","deleteList","eachList","lists","onCardDrag","useCallback","result","destination","source","destList","_destList","_destination$index","listToMutate","find","Number","cardToMutate","each","_destList2","onDragEnd","DragDropContext","direction","_dashboard$selectedBo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalStyles","createGlobalStyle","GREY","freeze","LIGHT_GREEN","ORANGE","INACTIVE","WARNING","ReactDOM","render","ThemeProvider","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.946e6e85.chunk.js","sourcesContent":["export const CONFIRM_ICON_CODE = <>&#x2714;</>;\nexport const CLOSE_ICON_CODE = <>&#x2716;</>;\n","import styled from 'styled-components';\n\nexport const StyledSelect = styled.select<{ $caratColor?: string }>`\n  outline: none;\n  min-height: 24px;\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 700;\n  background: ${({ $caratColor = 'black' }) =>\n    `url(\"data:image/svg+xml,<svg height='10px' width='10px' viewBox='0 0 16 16' fill='${$caratColor}' xmlns='http://www.w3.org/2000/svg'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>\") no-repeat`};\n  background-position: calc(100% - 0.75rem) center !important;\n  -moz-appearance: none !important;\n  -webkit-appearance: none !important;\n  appearance: none !important;\n  padding-right: 2rem !important;\n  text-transform: capitalize;\n\n  & > option {\n    font-weight: 700;\n  }\n`;\n\nexport const StyledButton = styled.button<{\n  $bgcolor?: string;\n  $color?: string;\n}>`\n  border-radius: 16px;\n  padding: 4px 6px;\n  border: none;\n  color: ${({ $color, theme }) => $color || theme.pallete.WHITE};\n  font-size: 12px;\n  cursor: pointer;\n  text-align: center;\n  background: ${({ $bgcolor }) => $bgcolor || undefined};\n`;\n","import React, { useState } from 'react';\nimport styled, { useTheme } from 'styled-components';\nimport { CONFIRM_ICON_CODE, CLOSE_ICON_CODE } from '../constants';\nimport { StyledButton } from '../styled/common';\n\nconst StyledAddOneContainer = styled.div`\n  background: #dfdfdf;\n  width: 214px;\n  min-width: 214px;\n  border-radius: 4px;\n  cursor: pointer;\n  padding: 12px;\n`;\n\nconst StyledAddOneElement = styled(StyledAddOneContainer)`\n  text-decoration: none;\n  color: #444242;\n  align-self: flex-start;\n  font-size: 14px;\n\n  &:hover {\n    background: #c6c6c6;\n  }\n`;\n\nconst StyledAddOneMini = styled(StyledAddOneContainer)`\n  display: flex;\n  align-self: flex-start;\n  flex-direction: column;\n  gap: 8px;\n\n  & > input {\n    width: calc(100% - 16px);\n    height: 32px;\n    border-radius: 4px;\n    padding: 4px 8px;\n  }\n\n  & > div {\n    display: flex;\n    align-self: flex-end;\n    gap: 8px;\n  }\n`;\n\ninterface Props {\n  onSave?: (title: string) => void;\n  infoText: string;\n}\n\nconst AddEntity: React.FC<Props> = ({ onSave: onSaveFromProps, infoText }) => {\n  const theme = useTheme();\n  const [isAdding, setIsAdding] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const toggleBtn = () => {\n    setIsAdding((prev) => !prev);\n  };\n\n  const onTitleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => setTitle(e.target.value);\n\n  const onSave = () => {\n    onSaveFromProps?.(title);\n    setTitle('');\n    setIsAdding(false);\n  };\n\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && title) {\n      onSave();\n    }\n  };\n\n  if (!isAdding) {\n    return <StyledAddOneElement onClick={toggleBtn}>{infoText}</StyledAddOneElement>;\n  }\n\n  return (\n    <StyledAddOneMini>\n      <input\n        type='text'\n        placeholder={infoText}\n        autoFocus\n        value={title}\n        onChange={onTitleChange}\n        onKeyDown={onEnterPress}\n      />\n      <div>\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={title ? onSave : undefined}>\n          {CONFIRM_ICON_CODE}\n        </StyledButton>\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={toggleBtn}>\n          {CLOSE_ICON_CODE}\n        </StyledButton>\n      </div>\n    </StyledAddOneMini>\n  );\n};\n\nexport default AddEntity;\n","import { cloneDeep } from 'lodash';\nimport React, { ChangeEvent, useState } from 'react';\nimport Modal from 'react-modal';\nimport styled, { useTheme } from 'styled-components';\nimport { StyledButton, StyledSelect } from '../../styled/common';\nimport { CardType } from '../../types';\nimport './editCardModal.css';\nimport { CLOSE_ICON_CODE, CONFIRM_ICON_CODE } from '../../constants';\n\ninterface Props {\n  card: CardType;\n  onClose: (cardToSave?: CardType) => void;\n}\n\nconst StyledModalSelect = styled(StyledSelect)`\n  width: 100%;\n  color: #474747;\n`;\n\nconst EditCardModal: React.FC<Props> = ({ card: cardFromProps, onClose }) => {\n  const theme = useTheme();\n  const [card, setCard] = useState(cloneDeep(cardFromProps));\n  const [titleIsOpen, setTitleIsOpen] = useState(false);\n  const [comment, setComment] = useState('');\n  const [descriptionIsOpen, setDescriptionIsOpen] = useState(false);\n\n  const deleteComment = (index: number) =>\n    setCard((prev) => ({\n      ...prev,\n      comments: prev.comments.splice(index, 1),\n    }));\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => setComment(e.target.value);\n\n  const addComment: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && comment) {\n      setCard((prev) => ({\n        ...prev,\n        comment: prev.comments.push(comment),\n      }));\n      setComment('');\n    }\n  };\n\n  const onSave = () => onClose?.(card);\n\n  const onChange: React.ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n  > = (e) => {\n    const { name } = e.target;\n    const { value } = e.target;\n\n    setCard((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <Modal\n      isOpen\n      onRequestClose={() => onClose()}\n      className='Modal'\n      overlayClassName='Overlay'\n      appElement={document.getElementById('root') as HTMLDivElement}\n    >\n      <div className='edit-modal-title'>\n        {titleIsOpen ? (\n          <input\n            type='text'\n            className='on-edit-modal-title'\n            name='title'\n            onChange={onChange}\n            value={card.title}\n          />\n        ) : (\n          <h2>{card.title}</h2>\n        )}\n        <span\n          className={titleIsOpen ? 'close' : 'edit'}\n          onClick={() => setTitleIsOpen((prev) => !prev)}\n        />\n      </div>\n      <div>\n        <label className='model-label'>description</label>\n        <div className='card-desc'>\n          {descriptionIsOpen ? (\n            <textarea\n              value={card.description}\n              onChange={onChange}\n              name='description'\n              className='edit-text-area'\n            />\n          ) : (\n            <i>{card.description}</i>\n          )}\n          <span\n            className={descriptionIsOpen ? 'close' : 'edit'}\n            onClick={() => setDescriptionIsOpen((prev) => !prev)}\n          />\n        </div>\n      </div>\n      <div>\n        <label className='model-label'>status</label>\n        <StyledModalSelect value={card.priority} name='priority' onChange={onChange}>\n          <option value={0}>new</option>\n          <option value={1}>investigate</option>\n          <option value={2}>in-progress</option>\n          <option value={3}>done</option>\n          <option value={4}>critical</option>\n          <option value={5}>hold</option>\n        </StyledModalSelect>\n      </div>\n      <div>\n        <label className='model-label'>comments</label>\n        <div className='card-comment-container'>\n          <div>\n            {card.comments.map((comment, i) => (\n              <span className='comment' key={i}>\n                <i>{comment}</i>\n                <span className='comment-delete' onClick={() => deleteComment(i)}>\n                  {CLOSE_ICON_CODE}\n                </span>\n              </span>\n            ))}\n          </div>\n          <input\n            type='text'\n            value={comment}\n            className='add-comment'\n            placeholder='type and press enter to add comment'\n            onChange={onInputChange}\n            onKeyDown={addComment}\n          />\n        </div>\n      </div>\n      <div>\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={onSave}>\n          {CONFIRM_ICON_CODE}\n        </StyledButton>\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={() => onClose?.()}>\n          {CLOSE_ICON_CODE}\n        </StyledButton>\n      </div>\n    </Modal>\n  );\n};\n\nexport default EditCardModal;\n","import React from 'react';\nimport { CardType } from '../../types';\nimport './card.css';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { CLOSE_ICON_CODE } from '../../constants';\n\ninterface Props {\n  index: number;\n  listId: number;\n  card: CardType;\n  expandCard: () => void;\n  deleteCard: (id: number) => void;\n  moveCard: any;\n}\n\nconst Card: React.FC<Props> = ({ card, deleteCard, expandCard, index }) => {\n  const getTitleColor = (priority: number) => {\n    const classNames = ['card-title'];\n\n    switch (`${priority}`) {\n      case '1':\n        classNames.push('investigate');\n        break;\n      case '2':\n        classNames.push('in-progress');\n        break;\n      case '3':\n        classNames.push('done');\n        break;\n      case '4':\n        classNames.push('critical');\n        break;\n      case '5':\n        classNames.push('hold');\n        break;\n      default:\n        classNames.push('new');\n        break;\n    }\n\n    return classNames.join(' ');\n  };\n\n  return (\n    <Draggable draggableId={`${card.id}`} key={`${card.id}`} index={index}>\n      {({ dragHandleProps, draggableProps, innerRef }, { isDragging }) => (\n        <div\n          ref={innerRef}\n          className={isDragging ? 'card card-drag' : 'card'}\n          onClick={expandCard}\n          {...dragHandleProps}\n          {...draggableProps}\n        >\n          <div className={getTitleColor(card.priority)}>\n            <span> {card.title} </span>\n            <span onClick={() => deleteCard(card.id)}>{CLOSE_ICON_CODE}</span>\n          </div>\n          <div className='card-comment-count' title={card.description}>\n            {card.comments.length ? (\n              <i>{`${card.comments.length} comment(s)`}</i>\n            ) : (\n              <i>Be the first to comment</i>\n            )}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import { cloneDeep } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport styled, { useTheme } from 'styled-components';\nimport { CardType, DashBoardDataType } from '../../types';\nimport EditCardModal from '../modals/editCardModal';\nimport AddEntity from '../addEntity';\nimport Card from './card';\nimport { CLOSE_ICON_CODE } from '../../constants';\nimport { StyledButton } from '../../styled/common';\n\ninterface Props {\n  index: number;\n  list: DashBoardDataType[0][0];\n  updateDashBoard: (data: DashBoardDataType[0][0]) => void;\n  onDelete: (id: number) => void;\n}\n\nconst StyledAddContainer = styled.div`\n  padding: 0px 12px 12px 12px;\n\n  & > * {\n    padding: 8px !important;\n    width: 198px !important;\n    min-width: 198px !important;\n  }\n`;\n\nconst StyledListContainer = styled.div<{ $isDraggingOver?: boolean }>`\n  min-width: 240px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  background: ${({ $isDraggingOver }) => ($isDraggingOver ? 'white' : '#dfdfdf')};\n  border: 1px solid #b3b3b3;\n  box-shadow: ${({ $isDraggingOver }) =>\n    $isDraggingOver ? '2px 6px 10px 10px #cfc8c8' : ' 2px 6px 5px 1px #cfc8c8'};\n  color: #3b3b3b;\n  border-radius: 4px;\n  max-height: calc(100% - 12px);\n  transition: 200ms all ease-in-out;\n`;\n\nconst StyledTitleContainer = styled.div`\n  padding: 12px;\n  font-weight: 900;\n  text-transform: capitalize;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 12px 12px 12px;\n  overflow: auto;\n  gap: 16px;\n\n  .no-card {\n    padding: 10px 0px;\n    text-align: center;\n    width: calc(100% - 10px);\n    border-radius: 4px;\n    background: #f6f6f6;\n  }\n`;\n\nconst List: React.FC<Props> = ({ list: listFromProps, updateDashBoard, onDelete, index }) => {\n  const theme = useTheme();\n  const [list, setList] = useState(listFromProps);\n  const [expandedCard, setExpandedCard] = useState<CardType | null>(null);\n\n  useEffect(() => {\n    listFromProps && setList(listFromProps);\n  }, [listFromProps]);\n\n  const addCard = (title: string) => {\n    setList((prev) => ({\n      ...prev,\n      cards: [\n        ...prev.cards,\n        {\n          id: new Date().getTime(),\n          title,\n          priority: 0,\n          description: '',\n          comments: [],\n        },\n      ],\n    }));\n\n    updateDashBoard(list);\n  };\n\n  const closeModal = (card: CardType | null = null) => {\n    const mutatedList = cloneDeep(list);\n\n    if (card) {\n      mutatedList.cards = mutatedList.cards.map((eachCard) => {\n        if (eachCard.id === card.id) return card;\n        return eachCard;\n      });\n    }\n\n    setExpandedCard(null);\n    updateDashBoard(mutatedList);\n  };\n\n  const moveCard = (dragIndex: number, hoverIndex: number) => {\n    const mutatedList = cloneDeep(list);\n    const dragCard = mutatedList.cards[dragIndex];\n    mutatedList.cards.splice(dragIndex, 1);\n    mutatedList.cards.splice(hoverIndex, 0, dragCard);\n    updateDashBoard(mutatedList);\n  };\n\n  const deleteCard = (id: number) => {\n    const mutatedList = cloneDeep(list);\n    mutatedList.cards = mutatedList.cards.filter((eachCard) => eachCard.id !== id);\n    updateDashBoard(mutatedList);\n  };\n\n  return (\n    <Draggable draggableId={`${list.id}`} key={`${list.id}`} index={index}>\n      {({ dragHandleProps, draggableProps, innerRef: dragRef }) => (\n        <Droppable droppableId={`${list.id}`} key={`${list.id}`} type='card'>\n          {({ innerRef, droppableProps, placeholder }, { isDraggingOver }) => (\n            <StyledListContainer {...draggableProps} $isDraggingOver={isDraggingOver} ref={dragRef}>\n              <StyledTitleContainer {...dragHandleProps}>\n                <span>{list.title}</span>\n                <StyledButton $bgcolor={theme.pallete.ERROR} onClick={() => onDelete(list.id)}>\n                  {CLOSE_ICON_CODE}\n                </StyledButton>\n              </StyledTitleContainer>\n              <StyledCardContainer ref={innerRef} {...droppableProps}>\n                {!list.cards.length && (\n                  <div className='no-card' onMouseDown={(e) => e.preventDefault()}>\n                    <i>No Card(s) available</i>\n                  </div>\n                )}\n                {list.cards.map((eachCard, i) => (\n                  <Card\n                    index={i}\n                    listId={list.id}\n                    deleteCard={deleteCard}\n                    expandCard={() => setExpandedCard(eachCard)}\n                    moveCard={moveCard}\n                    card={eachCard}\n                    key={i}\n                  />\n                ))}\n                {placeholder}\n              </StyledCardContainer>\n              <StyledAddContainer>\n                <AddEntity infoText='add a card...' onSave={addCard} />\n              </StyledAddContainer>\n              {expandedCard && <EditCardModal card={expandedCard} onClose={closeModal} />}\n            </StyledListContainer>\n          )}\n        </Droppable>\n      )}\n    </Draggable>\n  );\n};\n\nexport default List;\n","import React, { ChangeEvent, useMemo, useState } from 'react';\nimport styled, { useTheme } from 'styled-components';\nimport { StyledButton, StyledSelect } from '../styled/common';\nimport { TitleType } from '../types';\nimport { CLOSE_ICON_CODE } from '../constants';\n\ninterface Props {\n  titleInfo?: TitleType;\n  onEnter?: any;\n  dashboardList: string[];\n  onDashboardChange: React.ChangeEventHandler<HTMLSelectElement>;\n  selectedBoard?: string;\n}\n\nconst StyledNavSelect = styled(StyledSelect)`\n  color: ${({ theme }) => theme.pallete.WHITE};\n  border-color: ${({ theme }) => theme.pallete.WHITE};\n`;\n\nconst StyledAddBtn = styled(StyledButton)`\n  font-size: 14px;\n  font-weight: 700;\n  padding: 4px 8px;\n\n  &:before {\n    content: '+';\n    padding-right: 8px;\n    font-size: 18px;\n    line-height: 16px;\n  }\n`;\n\nconst StyledNav = styled.nav`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.pallete.BLUE};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: calc(100% - 32px);\n  max-height: 32px;\n  min-height: 32px;\n  padding: 8px 16px;\n  box-shadow: ${({ theme }) => `0px 4px 6px 0px ${theme.pallete.BLACK}4d`};\n  z-index: 100;\n`;\n\nconst StylesNavTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  & > span {\n    font-weight: 900;\n    &:first-child {\n      color: ${({ theme }) => theme.pallete.WHITE};\n    }\n\n    &:nth-child(2) {\n      font-size: 12px;\n      padding: 2px 4px;\n      border-radius: 16px;\n      background: ${({ theme }) => theme.pallete.WHITE};\n      color: ${({ theme }) => theme.pallete.BLUE};\n    }\n  }\n`;\n\nconst NavAction = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  & > div {\n    position: relative;\n\n    & > input {\n      height: 32px;\n      border-radius: 4px;\n      color: ${({ theme }) => theme.pallete.BLUE};\n      padding: 2px 36px 2px 8px;\n      font-weight: 700;\n      font-size: 16px;\n\n      &::placeholder {\n        font-size: 12px;\n        font-weight: initial;\n      }\n    }\n\n    & > button {\n      position: absolute;\n      right: 0%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\n\nconst NavBar: React.FC<Props> = ({\n  titleInfo,\n  onEnter,\n  dashboardList,\n  onDashboardChange,\n  selectedBoard,\n}) => {\n  const theme = useTheme();\n  const [showAddInput, setShowAddInput] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const Title = useMemo(() => {\n    let title = 'Trello';\n    let version = '2.0';\n    if (titleInfo) {\n      title = titleInfo.title;\n      version = titleInfo.version;\n    }\n    return (\n      <StylesNavTitle>\n        <span>{title}</span>\n        {version && <span>{version}</span>}\n      </StylesNavTitle>\n    );\n  }, [titleInfo]);\n\n  const onClickAdd = () => {\n    setShowAddInput((prev) => !prev);\n    setTitle('');\n  };\n\n  const onTitleChange = (e: ChangeEvent<HTMLInputElement>) => setTitle(e.target.value);\n\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && title) {\n      onEnter?.(title);\n      onClickAdd();\n    }\n  };\n\n  return (\n    <StyledNav>\n      {Title}\n      <NavAction>\n        {showAddInput ? (\n          <div>\n            <input\n              type='text'\n              placeholder='type and press to add dashboard'\n              value={title}\n              onChange={onTitleChange}\n              onKeyDown={onEnterPress}\n            />\n            <StyledButton $bgcolor={theme.pallete.ERROR} onClick={onClickAdd}>\n              {CLOSE_ICON_CODE}\n            </StyledButton>\n          </div>\n        ) : (\n          <StyledAddBtn\n            $bgcolor={theme.pallete.WHITE}\n            $color={theme.pallete.BLUE}\n            onClick={onClickAdd}\n          >\n            Add New Dashboard\n          </StyledAddBtn>\n        )}\n        {dashboardList.length ? (\n          <StyledNavSelect onChange={onDashboardChange} value={selectedBoard} $caratColor='white'>\n            {dashboardList.map((dashboard, i) => (\n              <option key={i} value={dashboard}>\n                {`${dashboard} dashboard`}\n              </option>\n            ))}\n          </StyledNavSelect>\n        ) : null}\n      </NavAction>\n    </StyledNav>\n  );\n};\n\nexport default NavBar;\n","import { cloneDeep } from 'lodash';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DragDropContext, DropResult, Droppable, OnDragEndResponder } from 'react-beautiful-dnd';\nimport './App.css';\nimport styled, { useTheme } from 'styled-components';\nimport { AddEntity, List, NavBar } from './components';\nimport { CardType, DashBoardDataType, TitleType } from './types';\nimport { CLOSE_ICON_CODE } from './constants';\nimport { StyledButton } from './styled/common';\n\nconst StyledListContainer = styled.div`\n  margin-top: 48px;\n  height: calc(100% - 80px);\n  width: calc(100% - 32px);\n  padding: 16px;\n  display: flex;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst StyledDeleteDashboard = styled.div`\n  position: absolute;\n  bottom: 24px;\n  right: 32px;\n  z-index: 999;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  border-radius: 16px;\n\n  & > button {\n    box-shadow: 4px 6px 6px 0px #787878;\n    font-size: 22px;\n    padding: 8px 14px;\n  }\n\n  & > h2 {\n    width: 140px;\n    font-size: 15px;\n    text-transform: capitalize;\n    color: #3b3b3b;\n    background: rgba(0, 0, 0, 0.206);\n    border-radius: 8px;\n    padding: 2px 6px;\n    transition: all 0.1s ease-in-out;\n    overflow: hidden;\n    opacity: 0;\n  }\n\n  &:hover > h2 {\n    opacity: 1;\n    transition: all 0.1s ease-in-out;\n  }\n`;\n\nconst StyledListSection = styled.div`\n  display: flex;\n  gap: 16px;\n  overflow: auto;\n  align-items: flex-start;\n`;\n\nconst App: React.FC = () => {\n  const theme = useTheme();\n  const [titleInfo] = useState<TitleType>({\n    title: 'Trello',\n    version: '2.0',\n  });\n  const [dashboard, setDashboard] = useState<DashBoardDataType>({});\n  const [selectedBoard, setSelectedBoard] = useState('');\n\n  const getMockData = async () => {\n    const data = await fetch(`${process.env.PUBLIC_URL}/mock-data.json`).then((data) =>\n      data.json(),\n    );\n    setDashboard(data);\n    setSelectedBoard(Object.keys(data)[0]);\n  };\n\n  const addList = (title: string) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    let currBoard = selectedBoard ?? 'default';\n\n    if (!mutatedDashboard[currBoard]) {\n      currBoard = 'default';\n      mutatedDashboard[currBoard] = [];\n    }\n\n    mutatedDashboard[currBoard].push({\n      id: new Date().getTime(),\n      title,\n      cards: [],\n    });\n\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(currBoard);\n  };\n\n  const deleteList = (id: number) =>\n    setDashboard((prev) => ({\n      ...prev,\n      [selectedBoard]: prev[selectedBoard].filter((eachList) => eachList.id !== id),\n    }));\n\n  const onDashboardChange: React.ChangeEventHandler<HTMLSelectElement> = (e) =>\n    setSelectedBoard(e.target.value);\n\n  const updateDashBoard = (list: DashBoardDataType[0][0]) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    const lists = mutatedDashboard[selectedBoard].map((eachList) => {\n      if (eachList.id === list.id) return list;\n      return eachList;\n    });\n    mutatedDashboard[selectedBoard] = lists;\n    setDashboard(mutatedDashboard);\n  };\n\n  const onDashBoardTitleSave = (title: string) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    mutatedDashboard[title] = [];\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(title);\n  };\n\n  const deleteBoard = () => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    delete mutatedDashboard[selectedBoard];\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(Object.keys(mutatedDashboard)[0]);\n  };\n\n  const onCardDrag = useCallback(\n    (result: DropResult) => {\n      const { destination, source, draggableId } = result;\n\n      setDashboard((prev) => {\n        let destList: DashBoardDataType[0][0] | undefined;\n        const listToMutate = prev[selectedBoard].find(\n          ({ id }) => id === Number(source.droppableId),\n        );\n        const cardToMutate = listToMutate?.cards.find(({ id }) => id === Number(draggableId));\n\n        listToMutate?.cards.splice(source.index, 1);\n\n        if (destination?.droppableId === source.droppableId) {\n          listToMutate?.cards.splice(destination.index, 0, cardToMutate as CardType);\n        } else {\n          destList = prev[selectedBoard].find(({ id }) => id === Number(destination?.droppableId));\n\n          destList?.cards.splice(destination?.index ?? 0, 0, cardToMutate as CardType);\n        }\n        return {\n          ...prev,\n          //@ts-ignore\n          [selectedBoard]: prev[selectedBoard].map((each) => {\n            if (each.id === listToMutate?.id) return listToMutate;\n\n            if (destList?.id === each.id) return destList;\n\n            return each;\n          }),\n        };\n      });\n    },\n    [selectedBoard],\n  );\n\n  const onDragEnd: OnDragEndResponder = useCallback(\n    (result) => {\n      const { destination, source, type } = result;\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      if (type === 'card') {\n        onCardDrag(result);\n      }\n    },\n    [onCardDrag],\n  );\n\n  useEffect(() => {\n    getMockData();\n  }, []);\n\n  if (Object.keys(dashboard).length === 0 && !selectedBoard) {\n    return <></>;\n  }\n\n  return (\n    <div className='App'>\n      <NavBar\n        titleInfo={titleInfo}\n        dashboardList={Object.keys(dashboard)}\n        onDashboardChange={onDashboardChange}\n        selectedBoard={selectedBoard}\n        onEnter={onDashBoardTitleSave}\n      />\n      <StyledListContainer>\n        {Object.keys(dashboard).length > 1 && (\n          <StyledDeleteDashboard>\n            <h2>Delete Dashboard</h2>\n            <StyledButton $bgcolor={theme.pallete.ERROR} onClick={deleteBoard}>\n              {CLOSE_ICON_CODE}\n            </StyledButton>\n          </StyledDeleteDashboard>\n        )}\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId='container' direction='horizontal' type='list'>\n            {({ droppableProps, placeholder, innerRef }) => (\n              <StyledListSection ref={innerRef} {...droppableProps}>\n                {dashboard[selectedBoard]?.map((eachList, i) => (\n                  <List\n                    index={i}\n                    key={i}\n                    list={eachList}\n                    updateDashBoard={updateDashBoard}\n                    onDelete={deleteList}\n                  />\n                ))}\n                {placeholder}\n                <AddEntity infoText='add a new list...' onSave={addList} />\n              </StyledListSection>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </StyledListContainer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\nhtml, #root, .App,body {\n  height: 100%;\n}\n\n.App{\n  overflow: hidden;\n}\n\n.Modal {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  background: ${({ theme }) => theme.pallete.WHITE};\n  overflow: auto;\n  border-radius: 4px;\n  outline: none;\n  padding: 20px;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\nmax-width: 400px;\nwidth: 80%;\n  box-shadow:  ${({ theme }) => `0px 0px 20px 0px ${theme.pallete.GREY}`};\n  display: flex;\n  flex-direction: column;\n  gap:16px\n}\n\ninput {\n  outline: none;\n  border: none;\n}\n\ninput[type=text]::placeholder {\n  font-style: italic;\n}\n\n.Overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ theme }) => `${theme.pallete.GREY}99`}\n}\n\n.Modal label{\n  margin-bottom: 5px;\n  display: block;\n  text-transform: capitalize;\n  font-weight: 500;\n}\n\n.Modal>div:last-child{\ndisplay: flex;\nalign-items: center;\njustify-content: flex-end;\ngap: 8px;\n}\n\n.Modal button {\n  font-size: 18px;\n  border-radius: 20px;\n  padding: 8px 12px;\n}\n\n.close{\n  &:after {\n  content: '\\\\2716';\n  font-size: 16px;\n  cursor: pointer;\n  padding: 8px;\n}\n}\n\n.edit{\n  transform: rotate(108deg);\n  &:after {\n  content: '\\\\270E';\n  font-size: 16px;\n  cursor: pointer;\n}\n}\n`;\n\nexport default GlobalStyles;\n","const COLORS = Object.freeze({\n  BLUE: '#3081b0',\n  GREY: '#3b3b3b',\n  WHITE: '#ffffff',\n  BLACK: '#000000',\n  LIGHT_GREEN: '#759d90',\n  ORANGE: '#a16a05',\n  SUCCESS: '#3a8b5e',\n  ERROR: '#9f3939',\n  INACTIVE: 'grey',\n  WARNING: '#a39e04',\n});\n\nconst theme = {\n  pallete: COLORS,\n};\n\nexport default theme;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport GlobalStyles from './styled/globalStyles';\nimport theme from './styled/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n    <GlobalStyles />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}