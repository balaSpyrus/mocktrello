{"version":3,"sources":["styled/app.styles.ts","styled/common.styles.ts","components/addEntity.tsx","styled/card.styles.ts","constants.tsx","styled/modal.styles.ts","components/modals/editCardModal.tsx","components/card/card.tsx","components/card/cardList.tsx","styled/navbar.styles.ts","components/navBar.tsx","App.tsx","serviceWorker.js","styled/globalStyles.ts","styled/theme.ts","index.tsx"],"names":["StyledListContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledDeleteDashboard","_templateObject2","_ref","theme","pallete","GREY","_ref2","_ref3","concat","BLACK","StyledListSection","_templateObject3","StyledAddOneContainer","_templateObject4","_ref4","VERY_LIGHT_GREY","StyledAddOneElement","_templateObject5","_ref5","StyledAddOneMini","_templateObject6","StyledSelect","select","_ref$$caratColor","$caratColor","StyledButton","button","$color","WHITE","$bgcolor","undefined","AddEntity","onSaveFromProps","onSave","infoText","useTheme","_useState","useState","_useState2","_slicedToArray","isAdding","setIsAdding","_useState3","_useState4","title","setTitle","toggleBtn","prev","_jsxs","children","_jsx","type","placeholder","autoFocus","value","onChange","e","target","onKeyDown","key","SUCCESS","onClick","GiConfirmed","ERROR","AiFillCloseCircle","StyledCardTitle","$bgColor","StyledCard","$isDragging","_ref6","_ref7","StyledAddContainer","_ref8","$isDraggingOver","LIGHT_GREY","_ref9","_ref10","_ref11","StyledTitleContainer","StyledCardContainer","_ref12","CONFIRM_ICON_CODE","_Fragment","CLOSE_ICON_CODE","StyledModalSelect","StyledModal","Modal","StyledModalTitle","BLUE","StyledCommentContainer","LIGHT_GREEN","StyledCardDescription","EditCardModal","cardFromProps","card","onClose","cloneDeep","setCard","titleIsOpen","setTitleIsOpen","_useState5","_useState6","comment","setComment","_useState7","_useState8","descriptionIsOpen","setDescriptionIsOpen","name","_objectSpread","_defineProperty","isOpen","onRequestClose","className","overlayClassName","appElement","document","getElementById","description","priority","comments","map","i","index","splice","push","Card","_ref$card","id","deleteCard","expandCard","getTitleColor","ORANGE","WARNING","Draggable","draggableId","dragHandleProps","draggableProps","innerRef","isDragging","ref","GrFormClose","fontSize","length","List","listFromProps","list","updateDashBoard","onDelete","setList","expandedCard","setExpandedCard","useEffect","addCard","cards","_toConsumableArray","Date","getTime","closeModal","arguments","mutatedList","eachCard","moveCard","dragIndex","hoverIndex","dragCard","filter","dragRef","Droppable","droppableId","droppableProps","isDraggingOver","size","color","onMouseDown","preventDefault","listId","StyledNavSelect","StyledAddBtn","StyledNav","nav","StylesNavTitle","NavAction","NavBar","titleInfo","onEnter","dashboardList","onDashboardChange","selectedBoard","showAddInput","setShowAddInput","Title","useMemo","version","onClickAdd","MdOutlineDashboardCustomize","dashboard","App","setDashboard","setSelectedBoard","getMockData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","next","fetch","process","then","json","sent","Object","keys","stop","apply","addList","mutatedDashboard","currBoard","deleteList","eachList","lists","onCardDrag","useCallback","result","destination","source","destList","_destList","_destination$index","listToMutate","find","Number","cardToMutate","each","_destList2","onDragEnd","DragDropContext","direction","_dashboard$selectedBo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GlobalStyles","createGlobalStyle","freeze","INACTIVE","ReactDOM","render","ThemeProvider","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f828b01c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledListContainer = styled.div`\n  margin-top: 48px;\n  height: calc(100% - 80px);\n  width: calc(100% - 32px);\n  padding: 16px;\n  display: flex;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const StyledDeleteDashboard = styled.div`\n  position: absolute;\n  bottom: 24px;\n  right: 32px;\n  z-index: 999;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  border-radius: 16px;\n\n  & > button {\n    box-shadow: 4px 6px 6px 0px ${({ theme }) => theme.pallete.GREY};\n    font-size: 22px;\n    padding: 8px 14px;\n  }\n\n  & > h2 {\n    width: 140px;\n    font-size: 15px;\n    text-transform: capitalize;\n    color: ${({ theme }) => theme.pallete.GREY};\n    background: ${({ theme }) => `${theme.pallete.BLACK}35`};\n    border-radius: 8px;\n    padding: 2px 6px;\n    transition: all 0.1s ease-in-out;\n    overflow: hidden;\n    opacity: 0;\n  }\n\n  &:hover > h2 {\n    opacity: 1;\n    transition: all 0.1s ease-in-out;\n  }\n`;\n\nexport const StyledListSection = styled.div`\n  display: flex;\n  gap: 16px;\n  overflow: auto;\n  align-items: flex-start;\n`;\n\nconst StyledAddOneContainer = styled.div`\n  background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  width: 214px;\n  min-width: 214px;\n  border-radius: 4px;\n  cursor: pointer;\n  padding: 12px;\n`;\n\nexport const StyledAddOneElement = styled(StyledAddOneContainer)`\n  color: ${({ theme }) => theme.pallete.GREY};\n  align-self: flex-start;\n  font-size: 14px;\n`;\n\nexport const StyledAddOneMini = styled(StyledAddOneContainer)`\n  display: flex;\n  align-self: flex-start;\n  flex-direction: column;\n  gap: 12px;\n\n  & > input {\n    height: 32px;\n    border-radius: 4px;\n    padding: 4px 8px;\n  }\n\n  & > div {\n    width: 100%;\n    display: flex;\n    justify-content: stretch;\n    gap: 8px;\n    & > button {\n      text-align: center;\n      justify-content: center;\n      flex: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledSelect = styled.select<{ $caratColor?: string }>`\n  outline: none;\n  min-height: 24px;\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 700;\n  background: ${({ $caratColor = 'black' }) =>\n    `url(\"data:image/svg+xml,<svg height='10px' width='10px' viewBox='0 0 16 16' fill='${$caratColor}' xmlns='http://www.w3.org/2000/svg'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>\") no-repeat`};\n  background-position: calc(100% - 0.75rem) center !important;\n  -moz-appearance: none !important;\n  -webkit-appearance: none !important;\n  appearance: none !important;\n  padding-right: 2rem !important;\n  text-transform: capitalize;\n\n  & > option {\n    font-weight: 700;\n  }\n`;\n\nexport const StyledButton = styled.button<{\n  $bgcolor?: string;\n  $color?: string;\n}>`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  border-radius: 16px;\n  padding: 4px 6px;\n  border: none;\n  color: ${({ $color, theme }) => $color || theme.pallete.WHITE};\n  font-size: 12px;\n  cursor: pointer;\n  text-align: center;\n  background: ${({ $bgcolor }) => $bgcolor || undefined};\n`;\n","import React, { useState } from 'react';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport { GiConfirmed } from 'react-icons/gi';\nimport { useTheme } from 'styled-components';\nimport { StyledAddOneElement, StyledAddOneMini } from '../styled/app.styles';\nimport { StyledButton } from '../styled/common.styles';\n\ninterface Props {\n  onSave?: (title: string) => void;\n  infoText: string;\n}\n\nconst AddEntity: React.FC<Props> = ({ onSave: onSaveFromProps, infoText }) => {\n  const theme = useTheme();\n  const [isAdding, setIsAdding] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const toggleBtn = () => {\n    setIsAdding((prev) => !prev);\n  };\n\n  const onTitleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => setTitle(e.target.value);\n\n  const onSave = () => {\n    onSaveFromProps?.(title);\n    setTitle('');\n    setIsAdding(false);\n  };\n\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && title) {\n      onSave();\n    }\n  };\n\n  if (!isAdding) {\n    return <StyledAddOneElement onClick={toggleBtn}>{infoText}</StyledAddOneElement>;\n  }\n\n  return (\n    <StyledAddOneMini>\n      <input\n        type='text'\n        placeholder={infoText}\n        autoFocus\n        value={title}\n        onChange={onTitleChange}\n        onKeyDown={onEnterPress}\n      />\n      <div>\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={title ? onSave : undefined}>\n          <GiConfirmed />\n          Save\n        </StyledButton>\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={toggleBtn}>\n          <AiFillCloseCircle />\n          Cancel\n        </StyledButton>\n      </div>\n    </StyledAddOneMini>\n  );\n};\n\nexport default AddEntity;\n","import styled from 'styled-components';\n\nexport const StyledCardTitle = styled.div<{ $bgColor: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px;\n  font-weight: 700;\n  color: white;\n  text-transform: capitalize;\n  font-size: 12px;\n  border-radius: 4px 4px 0px 0px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background: ${({ $bgColor }) => $bgColor};\n\n  & path {\n    fill: ${({ theme }) => theme.pallete.WHITE};\n    stroke: ${({ theme }) => theme.pallete.WHITE};\n  }\n`;\n\nexport const StyledCard = styled.div<{ $isDragging: boolean }>`\n  position: relative;\n  background: white;\n  cursor: pointer;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 3px 3px 0px 1px ${({ theme }) => theme.pallete.GREY + '45'};\n  transition: 200ms all ease-in-out;\n  opacity: ${({ $isDragging }) => ($isDragging ? 0.7 : 1)};\n  transform: ${({ $isDragging }) => ($isDragging ? 'scale(0.8)' : 'scale(1)')};\n\n  &:hover {\n    background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  }\n\n  & > div:first-child {\n  }\n\n  & > div:last-child {\n    padding: 12px;\n    align-self: flex-end;\n  }\n`;\n\nexport const StyledAddContainer = styled.div`\n  padding: 0px 12px 12px 12px;\n\n  & > * {\n    padding: 8px !important;\n    width: 198px !important;\n    min-width: 198px !important;\n  }\n`;\n\nexport const StyledListContainer = styled.div<{ $isDraggingOver?: boolean }>`\n  min-width: 240px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  background: ${({ $isDraggingOver, theme }) =>\n    $isDraggingOver ? 'white' : theme.pallete.LIGHT_GREY};\n  border: 1px solid ${({ theme }) => theme.pallete.LIGHT_GREY};\n  box-shadow: ${({ $isDraggingOver, theme }) =>\n    $isDraggingOver\n      ? `6px 6px 10px 2px ${theme.pallete.LIGHT_GREY}75`\n      : ` 4px 4px 4px 1px ${theme.pallete.LIGHT_GREY}75`};\n  color: ${({ theme }) => theme.pallete.GREY};\n  border-radius: 4px;\n  max-height: calc(100% - 12px);\n  transition: 200ms all ease-in-out;\n`;\n\nexport const StyledTitleContainer = styled.div`\n  padding: 12px;\n  font-weight: 900;\n  text-transform: capitalize;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 12px 12px 12px;\n  overflow: auto;\n  gap: 16px;\n\n  .no-card {\n    padding: 10px 0px;\n    text-align: center;\n    border-radius: 4px;\n    background: ${({ theme }) => theme.pallete.WHITE};\n  }\n`;\n","export const CONFIRM_ICON_CODE = <>&#x2714;</>;\nexport const CLOSE_ICON_CODE = <>&#x2716;</>;\n","import styled from 'styled-components';\nimport { StyledSelect } from './common.styles';\nimport Modal from 'react-modal';\n\nexport const StyledModalSelect = styled(StyledSelect)`\n  width: 100%;\n  color: ${({ theme }) => theme.pallete.GREY};\n`;\n\nexport const StyledModal = styled(Modal)`\n  label {\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n`;\nexport const StyledModalTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-transform: capitalize;\n  background: ${({ theme }) => theme.pallete.BLUE};\n  padding: 12px;\n  border-radius: 4px;\n  color: white;\n  gap: 12px;\n  & input {\n    height: 30px;\n    width: 100%;\n    border-radius: 4px;\n    padding: 3px 10px;\n    font-size: 20px;\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n\n  & h2 {\n    margin: 0;\n    display: inline-block;\n  }\n`;\nexport const StyledCommentContainer = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-weight: 700;\n  background: ${({ theme }) => theme.pallete.LIGHT_GREEN + '40'};\n  border-radius: 4px;\n\n  & input {\n    height: 24px;\n    border: none;\n    border-radius: 4px;\n    padding: 4px 8px;\n    background: ${({ theme }) => theme.pallete.LIGHT_GREY};\n    color: ${({ theme }) => theme.pallete.GREY};\n    font-size: 14px;\n\n    &::placeholder {\n      color: ${({ theme }) => theme.pallete.GREY};\n    }\n  }\n\n  & > div {\n    max-height: 250px;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    & > span {\n      position: relative;\n      display: block;\n      padding: 4px 8px;\n      background: ${({ theme }) => theme.pallete.SUCCESS + 'c4'};\n      color: white;\n      font-size: 12px;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      border-radius: 20px;\n      min-height: 14px;\n      & > span {\n        padding: 0px 3px;\n        cursor: pointer;\n        position: absolute;\n        right: 4px;\n        top: 3px;\n        color: white;\n      }\n    }\n  }\n`;\nexport const StyledCardDescription = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  overflow: auto;\n  background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  padding: 12px;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.pallete.GREY};\n  gap: 12px;\n  & > textarea {\n    margin: 0px;\n    width: 475px;\n    height: 100px;\n    max-width: 475px;\n    max-height: 100px;\n    border-radius: 4px;\n    font-size: 15px;\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n`;\n","import { cloneDeep } from 'lodash';\nimport React, { ChangeEvent, useState } from 'react';\nimport { useTheme } from 'styled-components';\nimport { CLOSE_ICON_CODE, CONFIRM_ICON_CODE } from '../../constants';\nimport { StyledButton } from '../../styled/common.styles';\nimport { CardType } from '../../types';\nimport {\n  StyledModal,\n  StyledModalTitle,\n  StyledCardDescription,\n  StyledModalSelect,\n  StyledCommentContainer,\n} from '../../styled/modal.styles';\n\ninterface Props {\n  card: CardType;\n  onClose: (cardToSave?: CardType) => void;\n}\n\nconst EditCardModal: React.FC<Props> = ({ card: cardFromProps, onClose }) => {\n  const theme = useTheme();\n  const [card, setCard] = useState(cloneDeep(cardFromProps));\n  const [titleIsOpen, setTitleIsOpen] = useState(false);\n  const [comment, setComment] = useState('');\n  const [descriptionIsOpen, setDescriptionIsOpen] = useState(false);\n\n  const deleteComment = (index: number) =>\n    setCard((prev) => ({\n      ...prev,\n      comments: prev.comments.splice(index, 1),\n    }));\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => setComment(e.target.value);\n\n  const addComment: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && comment) {\n      setCard((prev) => ({\n        ...prev,\n        comment: prev.comments.push(comment),\n      }));\n      setComment('');\n    }\n  };\n\n  const onSave = () => onClose?.(card);\n\n  const onChange: React.ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n  > = (e) => {\n    const { name } = e.target;\n    const { value } = e.target;\n\n    setCard((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <StyledModal\n      isOpen\n      onRequestClose={() => onClose()}\n      className='Modal'\n      overlayClassName='Overlay'\n      appElement={document.getElementById('root') as HTMLDivElement}\n    >\n      <StyledModalTitle>\n        {titleIsOpen ? (\n          <input type='text' name='title' onChange={onChange} value={card.title} />\n        ) : (\n          <h2>{card.title}</h2>\n        )}\n        <span\n          className={titleIsOpen ? 'close' : 'edit'}\n          onClick={() => setTitleIsOpen((prev) => !prev)}\n        />\n      </StyledModalTitle>\n      <div>\n        <label>description</label>\n        <StyledCardDescription>\n          {descriptionIsOpen ? (\n            <textarea value={card.description} onChange={onChange} name='description' />\n          ) : (\n            <i>{card.description}</i>\n          )}\n          <span\n            className={descriptionIsOpen ? 'close' : 'edit'}\n            onClick={() => setDescriptionIsOpen((prev) => !prev)}\n          />\n        </StyledCardDescription>\n      </div>\n      <div>\n        <label>status</label>\n        <StyledModalSelect value={card.priority} name='priority' onChange={onChange}>\n          <option value={0}>new</option>\n          <option value={1}>investigate</option>\n          <option value={2}>in-progress</option>\n          <option value={3}>done</option>\n          <option value={4}>critical</option>\n          <option value={5}>hold</option>\n        </StyledModalSelect>\n      </div>\n      <div>\n        <label>comments</label>\n        <StyledCommentContainer>\n          <div>\n            {card.comments.map((comment, i) => (\n              <span key={i}>\n                <i>{comment}</i>\n                <span onClick={() => deleteComment(i)}>{CLOSE_ICON_CODE}</span>\n              </span>\n            ))}\n          </div>\n\n          <input\n            type='text'\n            value={comment}\n            placeholder='type and press enter to add comment'\n            onChange={onInputChange}\n            onKeyDown={addComment}\n          />\n        </StyledCommentContainer>\n      </div>\n      <div>\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={onSave}>\n          {CONFIRM_ICON_CODE}\n        </StyledButton>\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={() => onClose?.()}>\n          {CLOSE_ICON_CODE}\n        </StyledButton>\n      </div>\n    </StyledModal>\n  );\n};\n\nexport default EditCardModal;\n","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { GrFormClose } from 'react-icons/gr';\nimport { useTheme } from 'styled-components';\nimport { StyledCard, StyledCardTitle } from '../../styled/card.styles';\nimport { CardType } from '../../types';\n\ninterface Props {\n  index: number;\n  listId: number;\n  card: CardType;\n  expandCard: () => void;\n  deleteCard: (id: number) => void;\n  moveCard: any;\n}\n\nconst Card: React.FC<Props> = ({\n  card: { comments, description, id, priority, title },\n  deleteCard,\n  expandCard,\n  index,\n}) => {\n  const theme = useTheme();\n  const getTitleColor = (priority: number) => {\n    switch (`${priority}`) {\n      case '1':\n        return theme.pallete.ORANGE;\n      case '2':\n        return theme.pallete.WARNING;\n      case '3':\n        return theme.pallete.SUCCESS;\n      case '4':\n        return theme.pallete.ERROR;\n      case '5':\n        return theme.pallete.GREY;\n      default:\n        return theme.pallete.BLUE;\n    }\n  };\n\n  return (\n    <Draggable draggableId={`${id}`} key={`${id}`} index={index}>\n      {({ dragHandleProps, draggableProps, innerRef }, { isDragging }) => (\n        <StyledCard\n          $isDragging={isDragging}\n          ref={innerRef}\n          onClick={expandCard}\n          {...dragHandleProps}\n          {...draggableProps}\n        >\n          <StyledCardTitle $bgColor={getTitleColor(priority)}>\n            <span> {title} </span>\n            <span onClick={() => deleteCard(id)}>\n              <GrFormClose fontSize={16} />\n            </span>\n          </StyledCardTitle>\n          <div title={description}>\n            {comments.length ? (\n              <i>{`${comments.length} comment(s)`}</i>\n            ) : (\n              <i>Be the first to comment</i>\n            )}\n          </div>\n        </StyledCard>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import { cloneDeep } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport { useTheme } from 'styled-components';\nimport {\n  StyledAddContainer,\n  StyledCardContainer,\n  StyledListContainer,\n  StyledTitleContainer,\n} from '../../styled/card.styles';\nimport { StyledButton } from '../../styled/common.styles';\nimport { CardType, DashBoardDataType } from '../../types';\nimport AddEntity from '../addEntity';\nimport EditCardModal from '../modals/editCardModal';\nimport Card from './card';\n\ninterface Props {\n  index: number;\n  list: DashBoardDataType[0][0];\n  updateDashBoard: (data: DashBoardDataType[0][0]) => void;\n  onDelete: (id: number) => void;\n}\n\nconst List: React.FC<Props> = ({ list: listFromProps, updateDashBoard, onDelete, index }) => {\n  const theme = useTheme();\n  const [list, setList] = useState(listFromProps);\n  const [expandedCard, setExpandedCard] = useState<CardType | null>(null);\n\n  useEffect(() => {\n    listFromProps && setList(listFromProps);\n  }, [listFromProps]);\n\n  const addCard = (title: string) => {\n    setList((prev) => ({\n      ...prev,\n      cards: [\n        ...prev.cards,\n        {\n          id: new Date().getTime(),\n          title,\n          priority: 0,\n          description: '',\n          comments: [],\n        },\n      ],\n    }));\n\n    updateDashBoard(list);\n  };\n\n  const closeModal = (card: CardType | null = null) => {\n    const mutatedList = cloneDeep(list);\n\n    if (card) {\n      mutatedList.cards = mutatedList.cards.map((eachCard) => {\n        if (eachCard.id === card.id) return card;\n        return eachCard;\n      });\n    }\n\n    setExpandedCard(null);\n    updateDashBoard(mutatedList);\n  };\n\n  const moveCard = (dragIndex: number, hoverIndex: number) => {\n    const mutatedList = cloneDeep(list);\n    const dragCard = mutatedList.cards[dragIndex];\n    mutatedList.cards.splice(dragIndex, 1);\n    mutatedList.cards.splice(hoverIndex, 0, dragCard);\n    updateDashBoard(mutatedList);\n  };\n\n  const deleteCard = (id: number) => {\n    const mutatedList = cloneDeep(list);\n    mutatedList.cards = mutatedList.cards.filter((eachCard) => eachCard.id !== id);\n    updateDashBoard(mutatedList);\n  };\n\n  return (\n    <Draggable draggableId={`${list.id}`} key={`${list.id}`} index={index}>\n      {({ dragHandleProps, draggableProps, innerRef: dragRef }) => (\n        <Droppable droppableId={`${list.id}`} key={`${list.id}`} type='card'>\n          {({ innerRef, droppableProps, placeholder }, { isDraggingOver }) => (\n            <StyledListContainer {...draggableProps} $isDraggingOver={isDraggingOver} ref={dragRef}>\n              <StyledTitleContainer {...dragHandleProps}>\n                <span>{list.title}</span>\n                <StyledButton $bgcolor={'transparent'} onClick={() => onDelete(list.id)}>\n                  <AiFillCloseCircle size={22} color={theme.pallete.ERROR} />\n                </StyledButton>\n              </StyledTitleContainer>\n              <StyledCardContainer ref={innerRef} {...droppableProps}>\n                {!list.cards.length && (\n                  <div className='no-card' onMouseDown={(e) => e.preventDefault()}>\n                    <i>No Card(s) available</i>\n                  </div>\n                )}\n                {list.cards.map((eachCard, i) => (\n                  <Card\n                    index={i}\n                    listId={list.id}\n                    deleteCard={deleteCard}\n                    expandCard={() => setExpandedCard(eachCard)}\n                    moveCard={moveCard}\n                    card={eachCard}\n                    key={i}\n                  />\n                ))}\n                {placeholder}\n              </StyledCardContainer>\n              <StyledAddContainer>\n                <AddEntity infoText='Add a card...' onSave={addCard} />\n              </StyledAddContainer>\n              {expandedCard && <EditCardModal card={expandedCard} onClose={closeModal} />}\n            </StyledListContainer>\n          )}\n        </Droppable>\n      )}\n    </Draggable>\n  );\n};\n\nexport default List;\n","import styled from 'styled-components';\nimport { StyledSelect, StyledButton } from './common.styles';\n\nexport const StyledNavSelect = styled(StyledSelect)`\n  color: ${({ theme }) => theme.pallete.WHITE};\n  border-color: ${({ theme }) => theme.pallete.WHITE};\n`;\n\nexport const StyledAddBtn = styled(StyledButton)`\n  font-size: 14px;\n  font-weight: 700;\n  padding: 4px 8px;\n`;\n\nexport const StyledNav = styled.nav`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.pallete.BLUE};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: calc(100% - 32px);\n  max-height: 32px;\n  min-height: 32px;\n  padding: 8px 16px;\n  box-shadow: ${({ theme }) => `0px 4px 6px 0px ${theme.pallete.BLACK}4d`};\n  z-index: 100;\n`;\n\nexport const StylesNavTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  & > span {\n    font-weight: 900;\n    &:first-child {\n      color: ${({ theme }) => theme.pallete.WHITE};\n    }\n\n    &:nth-child(2) {\n      font-size: 12px;\n      padding: 2px 4px;\n      border-radius: 16px;\n      background: ${({ theme }) => theme.pallete.WHITE};\n      color: ${({ theme }) => theme.pallete.BLUE};\n    }\n  }\n`;\n\nexport const NavAction = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  & > div {\n    position: relative;\n\n    & > input {\n      height: 32px;\n      border-radius: 4px;\n      color: ${({ theme }) => theme.pallete.BLUE};\n      padding: 2px 36px 2px 8px;\n      font-weight: 700;\n      font-size: 16px;\n\n      &::placeholder {\n        font-size: 12px;\n        font-weight: initial;\n      }\n    }\n\n    & > button {\n      position: absolute;\n      right: 0%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\n","import React, { ChangeEvent, useMemo, useState } from 'react';\nimport { useTheme } from 'styled-components';\nimport { CLOSE_ICON_CODE } from '../constants';\nimport { StyledButton } from '../styled/common.styles';\nimport { TitleType } from '../types';\nimport {\n  StylesNavTitle,\n  StyledNav,\n  NavAction,\n  StyledAddBtn,\n  StyledNavSelect,\n} from '../styled/navbar.styles';\nimport { MdOutlineDashboardCustomize } from 'react-icons/md';\n\ninterface Props {\n  titleInfo?: TitleType;\n  onEnter?: any;\n  dashboardList: string[];\n  onDashboardChange: React.ChangeEventHandler<HTMLSelectElement>;\n  selectedBoard?: string;\n}\n\nconst NavBar: React.FC<Props> = ({\n  titleInfo,\n  onEnter,\n  dashboardList,\n  onDashboardChange,\n  selectedBoard,\n}) => {\n  const theme = useTheme();\n  const [showAddInput, setShowAddInput] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const Title = useMemo(() => {\n    let title = 'Trello';\n    let version = '2.0';\n    if (titleInfo) {\n      title = titleInfo.title;\n      version = titleInfo.version;\n    }\n    return (\n      <StylesNavTitle>\n        <span>{title}</span>\n        {version && <span>{version}</span>}\n      </StylesNavTitle>\n    );\n  }, [titleInfo]);\n\n  const onClickAdd = () => {\n    setShowAddInput((prev) => !prev);\n    setTitle('');\n  };\n\n  const onTitleChange = (e: ChangeEvent<HTMLInputElement>) => setTitle(e.target.value);\n\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && title) {\n      onEnter?.(title);\n      onClickAdd();\n    }\n  };\n\n  return (\n    <StyledNav>\n      {Title}\n      <NavAction>\n        {showAddInput ? (\n          <div>\n            <input\n              type='text'\n              placeholder='type and press to add dashboard'\n              value={title}\n              onChange={onTitleChange}\n              onKeyDown={onEnterPress}\n            />\n            <StyledButton $bgcolor={theme.pallete.ERROR} onClick={onClickAdd}>\n              {CLOSE_ICON_CODE}\n            </StyledButton>\n          </div>\n        ) : (\n          <StyledAddBtn\n            $bgcolor={theme.pallete.WHITE}\n            $color={theme.pallete.BLUE}\n            onClick={onClickAdd}\n          >\n            <MdOutlineDashboardCustomize />\n            Add New Dashboard\n          </StyledAddBtn>\n        )}\n        {dashboardList.length ? (\n          <StyledNavSelect onChange={onDashboardChange} value={selectedBoard} $caratColor='white'>\n            {dashboardList.map((dashboard, i) => (\n              <option key={i} value={dashboard}>\n                {`${dashboard} dashboard`}\n              </option>\n            ))}\n          </StyledNavSelect>\n        ) : null}\n      </NavAction>\n    </StyledNav>\n  );\n};\n\nexport default NavBar;\n","import { cloneDeep } from 'lodash';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DragDropContext, DropResult, Droppable, OnDragEndResponder } from 'react-beautiful-dnd';\nimport { useTheme } from 'styled-components';\nimport { AddEntity, List, NavBar } from './components';\nimport { CLOSE_ICON_CODE } from './constants';\nimport { StyledButton } from './styled/common.styles';\nimport { CardType, DashBoardDataType, TitleType } from './types';\nimport { StyledListContainer, StyledDeleteDashboard, StyledListSection } from './styled/app.styles';\n\nconst App: React.FC = () => {\n  const theme = useTheme();\n  const [titleInfo] = useState<TitleType>({\n    title: 'Trello',\n    version: '2.0',\n  });\n  const [dashboard, setDashboard] = useState<DashBoardDataType>({});\n  const [selectedBoard, setSelectedBoard] = useState('');\n\n  const getMockData = async () => {\n    const data = await fetch(`${process.env.PUBLIC_URL}/mock-data.json`).then((data) =>\n      data.json(),\n    );\n    setDashboard(data);\n    setSelectedBoard(Object.keys(data)[0]);\n  };\n\n  const addList = (title: string) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    let currBoard = selectedBoard ?? 'default';\n\n    if (!mutatedDashboard[currBoard]) {\n      currBoard = 'default';\n      mutatedDashboard[currBoard] = [];\n    }\n\n    mutatedDashboard[currBoard].push({\n      id: new Date().getTime(),\n      title,\n      cards: [],\n    });\n\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(currBoard);\n  };\n\n  const deleteList = (id: number) =>\n    setDashboard((prev) => ({\n      ...prev,\n      [selectedBoard]: prev[selectedBoard].filter((eachList) => eachList.id !== id),\n    }));\n\n  const onDashboardChange: React.ChangeEventHandler<HTMLSelectElement> = (e) =>\n    setSelectedBoard(e.target.value);\n\n  const updateDashBoard = (list: DashBoardDataType[0][0]) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    const lists = mutatedDashboard[selectedBoard].map((eachList) => {\n      if (eachList.id === list.id) return list;\n      return eachList;\n    });\n    mutatedDashboard[selectedBoard] = lists;\n    setDashboard(mutatedDashboard);\n  };\n\n  const onDashBoardTitleSave = (title: string) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    mutatedDashboard[title] = [];\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(title);\n  };\n\n  const deleteBoard = () => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    delete mutatedDashboard[selectedBoard];\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(Object.keys(mutatedDashboard)[0]);\n  };\n\n  const onCardDrag = useCallback(\n    (result: DropResult) => {\n      const { destination, source, draggableId } = result;\n\n      setDashboard((prev) => {\n        let destList: DashBoardDataType[0][0] | undefined;\n        const listToMutate = prev[selectedBoard].find(\n          ({ id }) => id === Number(source.droppableId),\n        );\n        const cardToMutate = listToMutate?.cards.find(({ id }) => id === Number(draggableId));\n\n        listToMutate?.cards.splice(source.index, 1);\n\n        if (destination?.droppableId === source.droppableId) {\n          listToMutate?.cards.splice(destination.index, 0, cardToMutate as CardType);\n        } else {\n          destList = prev[selectedBoard].find(({ id }) => id === Number(destination?.droppableId));\n\n          destList?.cards.splice(destination?.index ?? 0, 0, cardToMutate as CardType);\n        }\n        return {\n          ...prev,\n          //@ts-ignore\n          [selectedBoard]: prev[selectedBoard].map((each) => {\n            if (each.id === listToMutate?.id) return listToMutate;\n\n            if (destList?.id === each.id) return destList;\n\n            return each;\n          }),\n        };\n      });\n    },\n    [selectedBoard],\n  );\n\n  const onDragEnd: OnDragEndResponder = useCallback(\n    (result) => {\n      const { destination, source, type } = result;\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      if (type === 'card') {\n        onCardDrag(result);\n      }\n    },\n    [onCardDrag],\n  );\n\n  useEffect(() => {\n    getMockData();\n  }, []);\n\n  if (Object.keys(dashboard).length === 0 && !selectedBoard) {\n    return <></>;\n  }\n\n  return (\n    <div className='App'>\n      <NavBar\n        titleInfo={titleInfo}\n        dashboardList={Object.keys(dashboard)}\n        onDashboardChange={onDashboardChange}\n        selectedBoard={selectedBoard}\n        onEnter={onDashBoardTitleSave}\n      />\n      <StyledListContainer>\n        {Object.keys(dashboard).length > 1 && (\n          <StyledDeleteDashboard>\n            <h2>Delete Dashboard</h2>\n            <StyledButton $bgcolor={theme.pallete.ERROR} onClick={deleteBoard}>\n              {CLOSE_ICON_CODE}\n            </StyledButton>\n          </StyledDeleteDashboard>\n        )}\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId='container' direction='horizontal' type='list'>\n            {({ droppableProps, placeholder, innerRef }) => (\n              <StyledListSection ref={innerRef} {...droppableProps}>\n                {dashboard[selectedBoard]?.map((eachList, i) => (\n                  <List\n                    index={i}\n                    key={i}\n                    list={eachList}\n                    updateDashBoard={updateDashBoard}\n                    onDelete={deleteList}\n                  />\n                ))}\n                {placeholder}\n                <AddEntity infoText='Add a new list...' onSave={addList} />\n              </StyledListSection>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </StyledListContainer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\nhtml, #root, .App,body {\n  height: 100%;\n}\n\n.App{\n  overflow: hidden;\n}\n\n.Modal {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  background: ${({ theme }) => theme.pallete.WHITE};\n  overflow: auto;\n  border-radius: 4px;\n  outline: none;\n  padding: 20px;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\nmax-width: 400px;\nwidth: 80%;\n  box-shadow:  ${({ theme }) => `0px 0px 20px 0px ${theme.pallete.GREY}`};\n  display: flex;\n  flex-direction: column;\n  gap:16px\n}\n\ninput {\n  outline: none;\n  border: none;\n}\n\ninput[type=text]::placeholder {\n  font-style: italic;\n}\n\n.Overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ theme }) => `${theme.pallete.GREY}99`}\n}\n\n.Modal label{\n  margin-bottom: 5px;\n  display: block;\n  text-transform: capitalize;\n  font-weight: 500;\n}\n\n.Modal>div:last-child{\ndisplay: flex;\nalign-items: center;\njustify-content: flex-end;\ngap: 8px;\n}\n\n.Modal button {\n  font-size: 18px;\n  border-radius: 20px;\n  padding: 8px 12px;\n}\n\n.close{\n  &:after {\n  content: '\\\\2716';\n  font-size: 16px;\n  cursor: pointer;\n}\n}\n\n.edit{\n  transform: rotate(108deg);\n  &:after {\n  content: '\\\\270E';\n  font-size: 16px;\n  cursor: pointer;\n}\n}\n`;\n\nexport default GlobalStyles;\n","const COLORS = Object.freeze({\n  BLUE: '#3081b0',\n  GREY: '#3b3b3b',\n  LIGHT_GREY: '#c6c6c6',\n  VERY_LIGHT_GREY: '#e8e8e8',\n  WHITE: '#ffffff',\n  BLACK: '#000000',\n  LIGHT_GREEN: '#759d90',\n  ORANGE: '#a16a05',\n  SUCCESS: '#3a8b5e',\n  ERROR: '#9f3939',\n  INACTIVE: 'grey',\n  WARNING: '#a39e04',\n});\n\nconst theme = {\n  pallete: COLORS,\n};\n\nexport default theme;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport GlobalStyles from './styled/globalStyles';\nimport theme from './styled/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n    <GlobalStyles />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}