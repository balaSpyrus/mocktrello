{"version":3,"sources":["styled/app.styles.ts","styled/common.styles.ts","components/addEntity.tsx","styled/card.styles.ts","styled/modal.styles.ts","components/modals/editCardModal.tsx","components/card/card.tsx","components/card/cardList.tsx","styled/navbar.styles.ts","components/navBar.tsx","App.tsx","serviceWorker.js","styled/globalStyles.ts","styled/theme.ts","index.tsx"],"names":["StyledListContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledDeleteDashboard","_templateObject2","_ref","theme","pallete","GREY","_ref2","_ref3","concat","BLACK","StyledListSection","_templateObject3","StyledAddOneContainer","_templateObject4","_ref4","VERY_LIGHT_GREY","StyledAddOneElement","_templateObject5","_ref5","StyledAddOneMini","_templateObject6","StyledSelect","select","_ref$$caratColor","$caratColor","StyledButton","button","$color","WHITE","$bgcolor","undefined","AddEntity","onSaveFromProps","onSave","infoText","useTheme","_useState","useState","_useState2","_slicedToArray","isAdding","setIsAdding","_useState3","_useState4","title","setTitle","toggleBtn","prev","_jsxs","children","_jsx","type","placeholder","autoFocus","value","onChange","e","target","onKeyDown","key","SUCCESS","onClick","GiConfirmed","ERROR","AiFillCloseCircle","StyledChip","span","$bgColor","StyledCardTitle","StyledCard","_ref6","$isDragging","_ref7","StyledCardContent","_ref8","StyledAddContainer","_ref9","_ref10","$isDraggingOver","_ref11","_ref12","LIGHT_GREY","_ref13","StyledTitleContainer","_templateObject7","_ref14","_ref15","StyledCardContainer","_templateObject8","StyledModalSelect","StyledModal","Modal","StyledModalTitle","BLUE","StyledCommentContainer","LIGHT_GREEN","StyledCardDescription","_ref16","EditCardModal","cardFromProps","card","onClose","lastRef","useRef","cloneDeep","setCard","titleIsOpen","setTitleIsOpen","_useState5","_useState6","comment","setComment","_useState7","_useState8","descriptionIsOpen","setDescriptionIsOpen","name","_objectSpread","_defineProperty","useEffect","timeOut","setInterval","_lastRef$current","current","scrollIntoView","behavior","clearInterval","isOpen","onRequestClose","className","overlayClassName","appElement","document","getElementById","GrFormClose","fontSize","AiOutlineEdit","description","priority","comments","map","i","ref","length","index","splice","push","Card","_ref$card","id","deleteCard","editCard","_useMemo","useMemo","data","color","text","ORANGE","WARNING","Draggable","draggableId","dragHandleProps","draggableProps","innerRef","isDragging","MdDragIndicator","List","listFromProps","list","updateDashBoard","onDelete","setList","expandedCard","setExpandedCard","addCard","cards","_toConsumableArray","Date","getTime","closeModal","arguments","mutatedList","eachCard","moveCard","dragIndex","hoverIndex","dragCard","filter","dragRef","Droppable","droppableId","droppableProps","isDraggingOver","MdDeleteOutline","size","onMouseDown","preventDefault","listId","StyledNavSelect","StyledAddBtn","StyledNav","nav","StylesNavTitle","NavAction","NavBar","titleInfo","onEnter","dashboardList","onDashboardChange","selectedBoard","showAddInput","setShowAddInput","Title","version","onClickAdd","MdOutlineDashboardCustomize","dashboard","App","setDashboard","setSelectedBoard","getMockData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","fetch","process","then","json","sent","console","log","Object","keys","stop","apply","addList","mutatedDashboard","currBoard","deleteList","eachList","lists","onListDrag","useCallback","result","destination","source","_destination$index","board","_board$splice","removedList","onCardDrag","_listToMutate$cards$s","destList","_destList","_destination$index2","listToMutate","find","Number","cardToMutate","each","_destList2","onDragEnd","BsFillClipboardXFill","DragDropContext","direction","_dashboard$selectedBo","_Fragment","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","GlobalStyles","createGlobalStyle","freeze","INACTIVE","ReactDOM","render","ThemeProvider","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f5edf954.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledListContainer = styled.div`\n  margin-top: 48px;\n  height: calc(100% - 80px);\n  width: calc(100% - 32px);\n  padding: 16px;\n  display: flex;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const StyledDeleteDashboard = styled.div`\n  position: absolute;\n  bottom: 24px;\n  right: 32px;\n  z-index: 999;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  border-radius: 16px;\n\n  & > button {\n    box-shadow: 4px 6px 6px 0px ${({ theme }) => theme.pallete.GREY + '80'};\n    font-size: 22px;\n    padding: 12px;\n    border-radius: 24px;\n  }\n\n  & > h2 {\n    width: 140px;\n    font-size: 15px;\n    text-transform: capitalize;\n    color: ${({ theme }) => theme.pallete.GREY};\n    background: ${({ theme }) => `${theme.pallete.BLACK}35`};\n    border-radius: 8px;\n    padding: 2px 6px;\n    transition: all 0.1s ease-in-out;\n    overflow: hidden;\n    opacity: 0;\n  }\n\n  &:hover > h2 {\n    opacity: 1;\n    transition: all 0.1s ease-in-out;\n  }\n`;\n\nexport const StyledListSection = styled.div`\n  display: flex;\n  gap: 16px;\n  overflow: auto;\n  align-items: flex-start;\n`;\n\nconst StyledAddOneContainer = styled.div`\n  background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  width: 214px;\n  min-width: 214px;\n  border-radius: 2px;\n  cursor: pointer;\n  padding: 12px;\n`;\n\nexport const StyledAddOneElement = styled(StyledAddOneContainer)`\n  color: ${({ theme }) => theme.pallete.GREY};\n  align-self: flex-start;\n  font-size: 14px;\n`;\n\nexport const StyledAddOneMini = styled(StyledAddOneContainer)`\n  display: flex;\n  align-self: flex-start;\n  flex-direction: column;\n  gap: 12px;\n\n  & > input {\n    height: 32px;\n    border-radius: 2px;\n    padding: 4px 8px;\n  }\n\n  & > div {\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    gap: 8px;\n    & > button {\n      text-align: center;\n      justify-content: center;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledSelect = styled.select<{ $caratColor?: string }>`\n  outline: none;\n  min-height: 24px;\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 700;\n  background: ${({ $caratColor = 'black' }) =>\n    `url(\"data:image/svg+xml,<svg height='10px' width='10px' viewBox='0 0 16 16' fill='${$caratColor}' xmlns='http://www.w3.org/2000/svg'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>\") no-repeat`};\n  background-position: calc(100% - 0.75rem) center !important;\n  -moz-appearance: none !important;\n  -webkit-appearance: none !important;\n  appearance: none !important;\n  padding-right: 2rem !important;\n  text-transform: capitalize;\n\n  & > option {\n    font-weight: 700;\n  }\n`;\n\nexport const StyledButton = styled.button<{\n  $bgcolor?: string;\n  $color?: string;\n}>`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  border-radius: 16px;\n  padding: 4px 6px;\n  border: none;\n  color: ${({ $color, theme }) => $color || theme.pallete.WHITE};\n  font-size: 12px;\n  cursor: pointer;\n  text-align: center;\n  background: ${({ $bgcolor }) => $bgcolor || undefined};\n`;\n","import React, { useState } from 'react';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport { GiConfirmed } from 'react-icons/gi';\nimport { useTheme } from 'styled-components';\nimport { StyledAddOneElement, StyledAddOneMini } from '../styled/app.styles';\nimport { StyledButton } from '../styled/common.styles';\n\ninterface Props {\n  onSave?: (title: string) => void;\n  infoText: string;\n}\n\nconst AddEntity: React.FC<Props> = ({ onSave: onSaveFromProps, infoText }) => {\n  const theme = useTheme();\n  const [isAdding, setIsAdding] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const toggleBtn = () => {\n    setIsAdding((prev) => !prev);\n  };\n\n  const onTitleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => setTitle(e.target.value);\n\n  const onSave = () => {\n    onSaveFromProps?.(title);\n    setTitle('');\n    setIsAdding(false);\n  };\n\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && title) {\n      onSave();\n    }\n  };\n\n  if (!isAdding) {\n    return <StyledAddOneElement onClick={toggleBtn}>{infoText}</StyledAddOneElement>;\n  }\n\n  return (\n    <StyledAddOneMini>\n      <input\n        type='text'\n        placeholder={infoText}\n        autoFocus\n        value={title}\n        onChange={onTitleChange}\n        onKeyDown={onEnterPress}\n      />\n      <div>\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={title ? onSave : undefined}>\n          <GiConfirmed />\n          Save\n        </StyledButton>\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={toggleBtn}>\n          <AiFillCloseCircle />\n          Cancel\n        </StyledButton>\n      </div>\n    </StyledAddOneMini>\n  );\n};\n\nexport default AddEntity;\n","import styled from 'styled-components';\n\nexport const StyledChip = styled.span<{ $bgColor: string }>`\n  background: ${({ $bgColor }) => $bgColor};\n  padding: 4px 6px;\n  border-radius: 25px;\n  color: white;\n  font-size: 12px;\n  font-weight: 700;\n`;\n\nexport const StyledCardTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  justify-content: space-between;\n  padding: 8px;\n  font-weight: 700;\n  color: white;\n  text-transform: capitalize;\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background: ${({ theme }) => theme.pallete.GREY};\n\n  & > div {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    flex: 1;\n  }\n\n  & > span {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    & path {\n      fill: ${({ theme }) => theme.pallete.WHITE};\n      stroke: ${({ theme }) => theme.pallete.WHITE};\n    }\n  }\n`;\n\nexport const StyledCard = styled.div<{ $isDragging: boolean }>`\n  position: relative;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${({ theme }) => theme.pallete.BLACK};\n  box-shadow: ${({ $isDragging, theme }) =>\n    $isDragging ? undefined : `2px 2px 0px 0px ${theme.pallete.BLACK}96`};\n  transition: 200ms all ease-in-out;\n  opacity: ${({ $isDragging }) => ($isDragging ? 0.7 : 1)};\n\n  &:hover {\n    opacity: 0.85;\n    transform: scale(0.95);\n  }\n`;\n\nexport const StyledCardContent = styled.div<{ $bgColor: string }>`\n  padding: 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  background: ${({ theme, $bgColor }) =>\n    `repeating-linear-gradient(-55deg, ${theme.pallete.WHITE}, ${theme.pallete.WHITE} 10px, ${$bgColor}20 10px, ${$bgColor}20 20px)`};\n\n  & span:first-child {\n    font-size: 12px;\n  }\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 8px;\n    & span {\n      font-size: 12px;\n    }\n  }\n`;\n\nexport const StyledAddContainer = styled.div`\n  padding: 12px;\n  border-top: 1px solid ${({ theme }) => theme.pallete.BLACK};\n\n  & > * {\n    padding: 8px !important;\n    width: 198px !important;\n    min-width: 198px !important;\n  }\n`;\n\nexport const StyledListContainer = styled.div<{ $isDraggingOver?: boolean }>`\n  min-width: 240px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  background: ${({ $isDraggingOver, theme }) =>\n    $isDraggingOver ? theme.pallete.VERY_LIGHT_GREY : theme.pallete.WHITE};\n  border: 1px solid ${({ theme }) => theme.pallete.BLACK};\n  box-shadow: 4px 4px\n    ${({ $isDraggingOver, theme }) =>\n      $isDraggingOver\n        ? `4px 2px ${theme.pallete.LIGHT_GREY}75`\n        : ` 0px 0px ${theme.pallete.LIGHT_GREY}75`};\n  color: ${({ theme }) => theme.pallete.GREY};\n  max-height: calc(100% - 12px);\n  transition: 200ms all ease-in-out;\n`;\n\nexport const StyledTitleContainer = styled.div`\n  padding: 12px;\n  font-weight: 900;\n  border-bottom: 1px solid ${({ theme }) => theme.pallete.BLACK};\n  background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  text-transform: capitalize;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  & > div:first-child {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n  }\n\n  & > span {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 12px 12px 12px;\n  overflow: auto;\n  gap: 20px;\n\n  .no-card {\n    padding-top: 12px;\n    text-align: center;\n    font-size: 12px;\n  }\n`;\n","import styled from 'styled-components';\nimport { StyledSelect } from './common.styles';\nimport Modal from 'react-modal';\n\nexport const StyledModalSelect = styled(StyledSelect)`\n  width: 100%;\n  color: ${({ theme }) => theme.pallete.GREY};\n`;\n\nexport const StyledModal = styled(Modal)`\n  label {\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n`;\nexport const StyledModalTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-transform: capitalize;\n  background: ${({ theme }) => theme.pallete.BLUE};\n  padding: 12px;\n  border-radius: 4px;\n  color: white;\n  gap: 12px;\n  & input {\n    height: 30px;\n    width: 100%;\n    border-radius: 4px;\n    padding: 3px 10px;\n    font-size: 20px;\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n\n  & path {\n    fill: ${({ theme }) => theme.pallete.WHITE};\n    stroke: ${({ theme }) => theme.pallete.WHITE};\n  }\n\n  & h2 {\n    margin: 0;\n    display: inline-block;\n  }\n`;\nexport const StyledCommentContainer = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-weight: 700;\n  background: ${({ theme }) => theme.pallete.LIGHT_GREEN + '40'};\n  border-radius: 4px;\n\n  & input {\n    height: 24px;\n    border: none;\n    border-radius: 4px;\n    padding: 4px 8px;\n    background: ${({ theme }) => theme.pallete.LIGHT_GREY};\n    color: ${({ theme }) => theme.pallete.GREY};\n    font-size: 14px;\n\n    &::placeholder {\n      color: ${({ theme }) => theme.pallete.GREY};\n    }\n  }\n\n  & > div {\n    max-height: 250px;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    & > span {\n      position: relative;\n      display: block;\n      padding: 4px 8px;\n      background: ${({ theme }) => theme.pallete.SUCCESS + 'c4'};\n      color: white;\n      font-size: 12px;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      border-radius: 20px;\n      min-height: 14px;\n      & > span {\n        padding: 0px 3px;\n        cursor: pointer;\n        position: absolute;\n        right: 4px;\n        top: 3px;\n        color: white;\n        & path {\n          fill: ${({ theme }) => theme.pallete.WHITE};\n          stroke: ${({ theme }) => theme.pallete.WHITE};\n        }\n      }\n    }\n  }\n`;\nexport const StyledCardDescription = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  overflow: auto;\n  background: ${({ theme }) => theme.pallete.VERY_LIGHT_GREY};\n  padding: 12px;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.pallete.GREY};\n  gap: 12px;\n  & > textarea {\n    margin: 0px;\n    width: 475px;\n    height: 100px;\n    max-width: 475px;\n    max-height: 100px;\n    border-radius: 4px;\n    font-size: 15px;\n    color: ${({ theme }) => theme.pallete.GREY};\n  }\n`;\n","import { cloneDeep } from 'lodash';\nimport React, { ChangeEvent, useEffect, useRef, useState } from 'react';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { GrFormClose } from 'react-icons/gr';\nimport { useTheme } from 'styled-components';\nimport { StyledButton } from '../../styled/common.styles';\nimport {\n  StyledCardDescription,\n  StyledCommentContainer,\n  StyledModal,\n  StyledModalSelect,\n  StyledModalTitle,\n} from '../../styled/modal.styles';\nimport { CardType } from '../../types';\n\ninterface Props {\n  card: CardType;\n  onClose: (cardToSave?: CardType) => void;\n}\n\nconst EditCardModal: React.FC<Props> = ({ card: cardFromProps, onClose }) => {\n  const theme = useTheme();\n  const lastRef = useRef<HTMLSpanElement>(null);\n  const [card, setCard] = useState(cloneDeep(cardFromProps));\n  const [titleIsOpen, setTitleIsOpen] = useState(false);\n  const [comment, setComment] = useState('');\n  const [descriptionIsOpen, setDescriptionIsOpen] = useState(false);\n\n  const deleteComment = (index: number) =>\n    setCard((prev) => ({\n      ...prev,\n      comments: prev.comments.splice(index, 1),\n    }));\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => setComment(e.target.value);\n\n  const addComment: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && comment) {\n      setCard((prev) => ({\n        ...prev,\n        comment: prev.comments.push(comment),\n      }));\n      setComment('');\n    }\n  };\n\n  const onSave = () => onClose?.(card);\n\n  const onChange: React.ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n  > = (e) => {\n    const { name } = e.target;\n    const { value } = e.target;\n\n    setCard((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    const timeOut = setInterval(() => lastRef.current?.scrollIntoView({ behavior: 'smooth' }), 100);\n\n    return () => {\n      clearInterval(timeOut);\n    };\n  }, [lastRef.current]);\n\n  return (\n    <StyledModal\n      isOpen\n      onRequestClose={() => onClose()}\n      className='Modal'\n      overlayClassName='Overlay'\n      appElement={document.getElementById('root') as HTMLDivElement}\n    >\n      <StyledModalTitle>\n        {titleIsOpen ? (\n          <input type='text' name='title' onChange={onChange} value={card.title} />\n        ) : (\n          <h2>{card.title}</h2>\n        )}\n        <span onClick={() => setTitleIsOpen((prev) => !prev)}>\n          {titleIsOpen ? <GrFormClose fontSize={18} /> : <AiOutlineEdit fontSize={16} />}\n        </span>\n      </StyledModalTitle>\n      <div>\n        <label>description</label>\n        <StyledCardDescription>\n          {descriptionIsOpen ? (\n            <textarea value={card.description} onChange={onChange} name='description' />\n          ) : (\n            <i>{card.description}</i>\n          )}\n          <span onClick={() => setDescriptionIsOpen((prev) => !prev)}>\n            {descriptionIsOpen ? <GrFormClose fontSize={18} /> : <AiOutlineEdit fontSize={16} />}\n          </span>\n        </StyledCardDescription>\n      </div>\n      <div>\n        <label>status</label>\n        <StyledModalSelect value={card.priority} name='priority' onChange={onChange}>\n          <option value={0}>new</option>\n          <option value={1}>investigate</option>\n          <option value={2}>in-progress</option>\n          <option value={3}>done</option>\n          <option value={4}>critical</option>\n          <option value={5}>hold</option>\n        </StyledModalSelect>\n      </div>\n      <div>\n        <label>comments</label>\n        <StyledCommentContainer>\n          <div>\n            {card.comments.map((comment, i) => (\n              <span key={i} ref={card.comments.length === i + 1 ? lastRef : null}>\n                <i>{comment}</i>\n                <span onClick={() => deleteComment(i)}>\n                  <GrFormClose fontSize={18} />\n                </span>\n              </span>\n            ))}\n          </div>\n\n          <input\n            type='text'\n            value={comment}\n            placeholder='type and press enter to add comment'\n            onChange={onInputChange}\n            onKeyDown={addComment}\n          />\n        </StyledCommentContainer>\n      </div>\n      <div>\n        <StyledButton $bgcolor={theme.pallete.SUCCESS} onClick={onSave}>\n          Save\n        </StyledButton>\n        <StyledButton $bgcolor={theme.pallete.ERROR} onClick={() => onClose?.()}>\n          Cancel\n        </StyledButton>\n      </div>\n    </StyledModal>\n  );\n};\n\nexport default EditCardModal;\n","import React, { useMemo } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { GrFormClose } from 'react-icons/gr';\nimport { MdDragIndicator } from 'react-icons/md';\nimport { useTheme } from 'styled-components';\nimport {\n  StyledCard,\n  StyledCardContent,\n  StyledCardTitle,\n  StyledChip,\n} from '../../styled/card.styles';\nimport { CardType } from '../../types';\n\ninterface Props {\n  index: number;\n  listId: number;\n  card: CardType;\n  editCard: () => void;\n  deleteCard: (id: number) => void;\n  moveCard: any;\n}\n\nconst Card: React.FC<Props> = ({\n  card: { comments, description, id, priority, title },\n  deleteCard,\n  editCard,\n  index,\n}) => {\n  const theme = useTheme();\n  const { color, text } = useMemo(() => {\n    let data = {\n      color: '',\n      text: '',\n    };\n    switch (`${priority}`) {\n      case '1':\n        data.color = theme.pallete.ORANGE;\n        data.text = 'Investigate';\n        break;\n      case '2':\n        data.color = theme.pallete.WARNING;\n        data.text = 'In-Progess';\n        break;\n      case '3':\n        data.color = theme.pallete.SUCCESS;\n        data.text = 'Completed';\n        break;\n      case '4':\n        data.color = theme.pallete.ERROR;\n        data.text = 'Blocked';\n        break;\n      case '5':\n        data.color = theme.pallete.LIGHT_GREY;\n        data.text = 'On-Hold';\n        break;\n      default:\n        data.color = theme.pallete.BLUE;\n        data.text = 'New';\n        break;\n    }\n\n    return data;\n  }, [priority]);\n\n  return (\n    <Draggable draggableId={`${id}`} key={`${id}`} index={index}>\n      {({ dragHandleProps, draggableProps, innerRef }, { isDragging }) => (\n        <StyledCard $isDragging={isDragging} ref={innerRef} {...draggableProps}>\n          <StyledCardTitle>\n            <div {...dragHandleProps}>\n              <MdDragIndicator />\n              <span> {title} </span>\n            </div>\n            <span onClick={editCard}>\n              <AiOutlineEdit fontSize={16} />\n            </span>\n            <span onClick={() => deleteCard(id)}>\n              <GrFormClose fontSize={16} />\n            </span>\n          </StyledCardTitle>\n          <StyledCardContent $bgColor={color}>\n            <span>{description}</span>\n            <div>\n              <StyledChip $bgColor={color}>{text}</StyledChip>\n              {comments.length ? (\n                <span>{`${comments.length} comment(s)`}</span>\n              ) : (\n                <span>No comment</span>\n              )}\n            </div>\n          </StyledCardContent>\n        </StyledCard>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import { cloneDeep } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { MdDeleteOutline, MdDragIndicator } from 'react-icons/md';\nimport { useTheme } from 'styled-components';\nimport {\n  StyledAddContainer,\n  StyledCardContainer,\n  StyledListContainer,\n  StyledTitleContainer,\n} from '../../styled/card.styles';\nimport { CardType, DashBoardDataType } from '../../types';\nimport AddEntity from '../addEntity';\nimport EditCardModal from '../modals/editCardModal';\nimport Card from './card';\n\ninterface Props {\n  index: number;\n  list: DashBoardDataType[0][0];\n  updateDashBoard: (data: DashBoardDataType[0][0]) => void;\n  onDelete: (id: number) => void;\n}\n\nconst List: React.FC<Props> = ({ list: listFromProps, updateDashBoard, onDelete, index }) => {\n  const theme = useTheme();\n  const [list, setList] = useState(listFromProps);\n  const [expandedCard, setExpandedCard] = useState<CardType | null>(null);\n\n  useEffect(() => {\n    listFromProps && setList(listFromProps);\n  }, [listFromProps]);\n\n  const addCard = (title: string) => {\n    setList((prev) => ({\n      ...prev,\n      cards: [\n        ...prev.cards,\n        {\n          id: new Date().getTime(),\n          title,\n          priority: 0,\n          description: '',\n          comments: [],\n        },\n      ],\n    }));\n\n    updateDashBoard(list);\n  };\n\n  const closeModal = (card: CardType | null = null) => {\n    const mutatedList = cloneDeep(list);\n\n    if (card) {\n      mutatedList.cards = mutatedList.cards.map((eachCard) => {\n        if (eachCard.id === card.id) return card;\n        return eachCard;\n      });\n    }\n\n    setExpandedCard(null);\n    updateDashBoard(mutatedList);\n  };\n\n  const moveCard = (dragIndex: number, hoverIndex: number) => {\n    const mutatedList = cloneDeep(list);\n    const dragCard = mutatedList.cards[dragIndex];\n    mutatedList.cards.splice(dragIndex, 1);\n    mutatedList.cards.splice(hoverIndex, 0, dragCard);\n    updateDashBoard(mutatedList);\n  };\n\n  const deleteCard = (id: number) => {\n    const mutatedList = cloneDeep(list);\n    mutatedList.cards = mutatedList.cards.filter((eachCard) => eachCard.id !== id);\n    updateDashBoard(mutatedList);\n  };\n\n  return (\n    <Draggable draggableId={`${list.id}`} key={`${list.id}`} index={index}>\n      {({ dragHandleProps, draggableProps, innerRef: dragRef }) => (\n        <Droppable droppableId={`${list.id}`} key={`${list.id}`} type='card'>\n          {({ innerRef, droppableProps, placeholder }, { isDraggingOver }) => (\n            <StyledListContainer {...draggableProps} $isDraggingOver={isDraggingOver} ref={dragRef}>\n              <StyledTitleContainer>\n                <div {...dragHandleProps}>\n                  <MdDragIndicator />\n                  <span>{list.title}</span>\n                </div>\n                <span onClick={() => onDelete(list.id)}>\n                  <MdDeleteOutline size={18} color={theme.pallete.ERROR} />\n                </span>\n              </StyledTitleContainer>\n              <StyledCardContainer ref={innerRef} {...droppableProps}>\n                {!list.cards.length && (\n                  <div className='no-card' onMouseDown={(e) => e.preventDefault()}>\n                    No Card(s) available\n                  </div>\n                )}\n                {list.cards.map((eachCard, i) => (\n                  <Card\n                    index={i}\n                    listId={list.id}\n                    deleteCard={deleteCard}\n                    editCard={() => setExpandedCard(eachCard)}\n                    moveCard={moveCard}\n                    card={eachCard}\n                    key={i}\n                  />\n                ))}\n                {placeholder}\n              </StyledCardContainer>\n              <StyledAddContainer>\n                <AddEntity infoText='Add a card...' onSave={addCard} />\n              </StyledAddContainer>\n              {expandedCard && <EditCardModal card={expandedCard} onClose={closeModal} />}\n            </StyledListContainer>\n          )}\n        </Droppable>\n      )}\n    </Draggable>\n  );\n};\n\nexport default List;\n","import styled from 'styled-components';\nimport { StyledSelect, StyledButton } from './common.styles';\n\nexport const StyledNavSelect = styled(StyledSelect)`\n  color: ${({ theme }) => theme.pallete.WHITE};\n  border-color: ${({ theme }) => theme.pallete.WHITE};\n  border-radius: 20px;\n`;\n\nexport const StyledAddBtn = styled(StyledButton)`\n  font-size: 14px;\n  font-weight: 700;\n  padding: 10px 12px;\n  border-radius: 20px;\n`;\n\nexport const StyledNav = styled.nav`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.pallete.BLUE};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: calc(100% - 32px);\n  max-height: 32px;\n  min-height: 32px;\n  padding: 8px 16px;\n  box-shadow: ${({ theme }) => `0px 4px 6px 0px ${theme.pallete.BLACK}4d`};\n  z-index: 100;\n`;\n\nexport const StylesNavTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  & > span {\n    font-weight: 900;\n    &:first-child {\n      color: ${({ theme }) => theme.pallete.WHITE};\n    }\n\n    &:nth-child(2) {\n      font-size: 12px;\n      padding: 2px 4px;\n      border-radius: 16px;\n      background: ${({ theme }) => theme.pallete.WHITE};\n      color: ${({ theme }) => theme.pallete.BLUE};\n    }\n  }\n`;\n\nexport const NavAction = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  & > div {\n    position: relative;\n\n    & > input {\n      height: 32px;\n      border-radius: 50px;\n      color: ${({ theme }) => theme.pallete.BLUE};\n      padding: 2px 24px 2px 16px;\n      font-weight: 700;\n      font-size: 16px;\n\n      &::placeholder {\n        font-size: 12px;\n        font-weight: initial;\n      }\n    }\n\n    & > button {\n      position: absolute;\n      padding: 0;\n      right: 0%;\n      top: 50%;\n      transform: translate(-25%, -50%);\n      & path {\n        fill: ${({ theme }) => theme.pallete.ERROR};\n        stroke: ${({ theme }) => theme.pallete.ERROR};\n        stroke-width: 3;\n      }\n    }\n  }\n`;\n","import React, { ChangeEvent, useMemo, useState } from 'react';\nimport { MdOutlineDashboardCustomize } from 'react-icons/md';\nimport { useTheme } from 'styled-components';\nimport { StyledButton } from '../styled/common.styles';\nimport {\n  NavAction,\n  StyledAddBtn,\n  StyledNav,\n  StyledNavSelect,\n  StylesNavTitle,\n} from '../styled/navbar.styles';\nimport { TitleType } from '../types';\nimport { GrFormClose } from 'react-icons/gr';\n\ninterface Props {\n  titleInfo?: TitleType;\n  onEnter?: any;\n  dashboardList: string[];\n  onDashboardChange: React.ChangeEventHandler<HTMLSelectElement>;\n  selectedBoard?: string;\n}\n\nconst NavBar: React.FC<Props> = ({\n  titleInfo,\n  onEnter,\n  dashboardList,\n  onDashboardChange,\n  selectedBoard,\n}) => {\n  const theme = useTheme();\n  const [showAddInput, setShowAddInput] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const Title = useMemo(() => {\n    let title = 'Trello';\n    let version = '2.0';\n    if (titleInfo) {\n      title = titleInfo.title;\n      version = titleInfo.version;\n    }\n    return (\n      <StylesNavTitle>\n        <span>{title}</span>\n        {version && <span>{version}</span>}\n      </StylesNavTitle>\n    );\n  }, [titleInfo]);\n\n  const onClickAdd = () => {\n    setShowAddInput((prev) => !prev);\n    setTitle('');\n  };\n\n  const onTitleChange = (e: ChangeEvent<HTMLInputElement>) => setTitle(e.target.value);\n\n  const onEnterPress: React.KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter' && title) {\n      onEnter?.(title);\n      onClickAdd();\n    }\n  };\n\n  return (\n    <StyledNav>\n      {Title}\n      <NavAction>\n        {showAddInput ? (\n          <div>\n            <input\n              type='text'\n              placeholder='type and press to add dashboard'\n              value={title}\n              onChange={onTitleChange}\n              onKeyDown={onEnterPress}\n            />\n            <StyledButton $bgcolor={'transparent'} onClick={onClickAdd}>\n              <GrFormClose fontSize={18} />\n            </StyledButton>\n          </div>\n        ) : (\n          <StyledAddBtn\n            $bgcolor={theme.pallete.WHITE}\n            $color={theme.pallete.BLUE}\n            onClick={onClickAdd}\n          >\n            <MdOutlineDashboardCustomize />\n            Add New Dashboard\n          </StyledAddBtn>\n        )}\n        {dashboardList.length ? (\n          <StyledNavSelect onChange={onDashboardChange} value={selectedBoard} $caratColor='white'>\n            {dashboardList.map((dashboard, i) => (\n              <option key={i} value={dashboard}>\n                {`${dashboard} dashboard`}\n              </option>\n            ))}\n          </StyledNavSelect>\n        ) : null}\n      </NavAction>\n    </StyledNav>\n  );\n};\n\nexport default NavBar;\n","import { cloneDeep } from 'lodash';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { DragDropContext, DropResult, Droppable, OnDragEndResponder } from 'react-beautiful-dnd';\nimport { BsFillClipboardXFill } from 'react-icons/bs';\nimport { useTheme } from 'styled-components';\nimport { AddEntity, List, NavBar } from './components';\nimport { StyledDeleteDashboard, StyledListContainer, StyledListSection } from './styled/app.styles';\nimport { StyledButton } from './styled/common.styles';\nimport { DashBoardDataType, TitleType } from './types';\n\nconst App: React.FC = () => {\n  const theme = useTheme();\n  const [titleInfo] = useState<TitleType>({\n    title: 'Trello',\n    version: '2.0',\n  });\n  const [dashboard, setDashboard] = useState<DashBoardDataType>({});\n  const [selectedBoard, setSelectedBoard] = useState('');\n\n  const getMockData = async () => {\n    // eslint-disable-next-line no-undef\n    const data = await fetch(`${process.env.PUBLIC_URL}/mock-data.json`).then((data) =>\n      data.json(),\n    );\n    setDashboard(data);\n    console.log(Object.keys(data));\n    setSelectedBoard(Object.keys(data)[0]);\n  };\n\n  const addList = (title: string) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    let currBoard = selectedBoard ?? 'default';\n\n    if (!mutatedDashboard[currBoard]) {\n      currBoard = 'default';\n      mutatedDashboard[currBoard] = [];\n    }\n\n    mutatedDashboard[currBoard].push({\n      id: new Date().getTime(),\n      title,\n      cards: [],\n    });\n\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(currBoard);\n  };\n\n  const deleteList = (id: number) =>\n    setDashboard((prev) => ({\n      ...prev,\n      [selectedBoard]: prev[selectedBoard].filter((eachList) => eachList.id !== id),\n    }));\n\n  const onDashboardChange: React.ChangeEventHandler<HTMLSelectElement> = (e) =>\n    setSelectedBoard(e.target.value);\n\n  const updateDashBoard = (list: DashBoardDataType[0][0]) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    const lists = mutatedDashboard[selectedBoard].map((eachList) => {\n      if (eachList.id === list.id) return list;\n      return eachList;\n    });\n    mutatedDashboard[selectedBoard] = lists;\n    setDashboard(mutatedDashboard);\n  };\n\n  const onDashBoardTitleSave = (title: string) => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    mutatedDashboard[title] = [];\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(title);\n  };\n\n  const deleteBoard = () => {\n    const mutatedDashboard = cloneDeep(dashboard);\n    delete mutatedDashboard[selectedBoard];\n    setDashboard(mutatedDashboard);\n    setSelectedBoard(Object.keys(mutatedDashboard)[0]);\n  };\n\n  const onListDrag = useCallback(\n    (result: DropResult) => {\n      const { destination, source } = result;\n      setDashboard((prev) => {\n        const board = prev[selectedBoard];\n        const [removedList] = board.splice(source.index, 1);\n        board.splice(destination?.index ?? source.index, 0, removedList);\n        prev[selectedBoard] = board;\n        return prev;\n      });\n    },\n    [selectedBoard],\n  );\n\n  const onCardDrag = useCallback(\n    (result: DropResult) => {\n      const { destination, source } = result;\n\n      setDashboard((prev) => {\n        let destList: DashBoardDataType[0][0] | undefined;\n        const listToMutate = prev[selectedBoard].find(\n          ({ id }) => id === Number(source.droppableId),\n        );\n\n        const [cardToMutate] = listToMutate?.cards.splice(source.index, 1) ?? [];\n\n        if (destination?.droppableId === source.droppableId) {\n          listToMutate?.cards.splice(destination.index, 0, cardToMutate);\n        } else {\n          destList = prev[selectedBoard].find(({ id }) => id === Number(destination?.droppableId));\n          destList?.cards.splice(destination?.index ?? source.index, 0, cardToMutate);\n        }\n\n        prev[selectedBoard] = prev[selectedBoard].map((each) => {\n          if (each.id === listToMutate?.id) return listToMutate;\n          if (destList?.id === each.id) return destList;\n          return each;\n        });\n\n        return prev;\n      });\n    },\n    [selectedBoard],\n  );\n\n  const onDragEnd: OnDragEndResponder = useCallback(\n    (result) => {\n      const { destination, source, type } = result;\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      if (type === 'card') {\n        onCardDrag(result);\n      }\n\n      if (type === 'list') {\n        onListDrag(result);\n      }\n    },\n    [onCardDrag, onListDrag],\n  );\n\n  useEffect(() => {\n    getMockData();\n  }, []);\n\n  if (Object.keys(dashboard).length === 0 || !selectedBoard) {\n    return <></>;\n  }\n\n  return (\n    <div className='App'>\n      <NavBar\n        titleInfo={titleInfo}\n        dashboardList={Object.keys(dashboard)}\n        onDashboardChange={onDashboardChange}\n        selectedBoard={selectedBoard}\n        onEnter={onDashBoardTitleSave}\n      />\n      <StyledListContainer>\n        {Object.keys(dashboard).length > 1 && (\n          <StyledDeleteDashboard>\n            <h2>Delete Dashboard</h2>\n            <StyledButton $bgcolor={theme.pallete.ERROR} onClick={deleteBoard}>\n              <BsFillClipboardXFill />\n            </StyledButton>\n          </StyledDeleteDashboard>\n        )}\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId='container' direction='horizontal' type='list'>\n            {({ droppableProps, placeholder, innerRef }) => (\n              <StyledListSection ref={innerRef} {...droppableProps}>\n                {dashboard[selectedBoard]?.map((eachList, i) => (\n                  <List\n                    index={i}\n                    key={i}\n                    list={eachList}\n                    updateDashBoard={updateDashBoard}\n                    onDelete={deleteList}\n                  />\n                ))}\n                {placeholder}\n                <AddEntity infoText='Add a new list...' onSave={addList} />\n              </StyledListSection>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </StyledListContainer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\nhtml, #root, .App,body {\n  height: 100%;\n}\n\n.App{\n  overflow: hidden;\n}\n\n.Modal {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  background: ${({ theme }) => theme.pallete.WHITE};\n  overflow: auto;\n  border-radius: 4px;\n  outline: none;\n  padding: 20px;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\nmax-width: 400px;\nwidth: 80%;\n  box-shadow:  ${({ theme }) => `0px 0px 20px 0px ${theme.pallete.GREY}`};\n  display: flex;\n  flex-direction: column;\n  gap:16px;\n\n& path {\n        stroke-width: 3;\n      }\n}\n\ninput {\n  outline: none;\n  border: none;\n}\n\ninput[type=text]::placeholder {\n  font-style: italic;\n}\n\n.Overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ theme }) => `${theme.pallete.GREY}99`};\n  z-index: 9999;\n}\n\n.Modal label{\n  margin-bottom: 5px;\n  display: block;\n  text-transform: capitalize;\n  font-weight: 500;\n}\n\n.Modal>div:last-child{\ndisplay: flex;\nalign-items: center;\njustify-content: stretch;\ngap: 8px;\n}\n\n.Modal button {\n  font-size: 18px;\n  border-radius: 20px;\n  padding: 8px 12px;\n  flex:1;\n  text-align:center;\n  display:block\n}\n\n`;\n\nexport default GlobalStyles;\n","const COLORS = Object.freeze({\n  BLUE: '#3081b0',\n  GREY: '#3b3b3b',\n  LIGHT_GREY: '#c6c6c6',\n  VERY_LIGHT_GREY: '#e8e8e8',\n  WHITE: '#ffffff',\n  BLACK: '#000000',\n  LIGHT_GREEN: '#759d90',\n  ORANGE: '#a16a05',\n  SUCCESS: '#3a8b5e',\n  ERROR: '#9f3939',\n  INACTIVE: 'grey',\n  WARNING: '#a39e04',\n});\n\nconst theme = {\n  pallete: COLORS,\n};\n\nexport default theme;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport GlobalStyles from './styled/globalStyles';\nimport theme from './styled/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n    <GlobalStyles />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}